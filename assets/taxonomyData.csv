Library,Commit,Root Cause,Date,bug report,PR/Issue,Violation,Impact,Action,condition,Fixing element,Fixing element detail,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c510c1b8b1ef5be1d65971f5b9e21e61becd0bb3,Type Checking,2024-02-08 7:11:31,Remove IsCalledComputation from HloComputation. The function doesn't do what it seems. There are more types of called instruction that are not accounted in this check.,,Unnecessary,Unexpected Behavior,remove,If Checker,Valid Object Type,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/06b89ed1bdf606adb21d66664ca7ab5eaffdd58f,Others,2024-02-05 9:44:09," BundleReader was not waiting for concurrents reads to complete before checking their result value. Also changed the large value reading test to actually exercise the multi-threaded reading path. Previously, the whole multi threaded path was being skipped because the reads were smaller than kBufferSize.",,Insufficient,Unexpected Behavior,extend,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d5862d423742ec26c46737d4526eca3b8b8a0d9b,Edge Cases,2024-01-26 9:54:39, [TFLite] Add check in Softmax reference function to ensure exponent is within valid range. * Add check to ensure the exponent does not cause an overflow in gemmlowp::RoundingDivideByPOT,,Missing,Numerical Error,add,Macro Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1a1a381b5be7701843c3f1e34aa1846ae2a1d0ce,Null Value,2024-01-25 13:27:28,"Fix a SIGSEGV bug in InferShapeForXlaGatherOp. Since `ComputeOutputComponent` may return nullptr, we need to check for null attributes explicitly to be safe.",,Improper,Program Crash,update,Checker API,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9718fed7b9aba244359b3d38c2a1dc20e50428bd,Computation Graph,2024-01-24 20:18:37, Added size check to avoid memory corruption in GraphDefImporter::ConvertNodeDef.,,Missing,Program Crash,add,If Checker,Valid Computation Graph,Computation Graph,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/798b2ebda0cc6f12f1ca6460611f760149771a11,Type Checking,2024-01-12 19:40:23," Ensure the allocation type is kTfLiteCustom when doing shallow copies in DeepOrShallowCopyTensorsShapeTypeData.  This code is correct only under the assumption that the caller has correctly prepared the tensors that get passed in for shallow copying, by setting their allocation types to kTfLiteCustom. This ensures that those tensors won't be double `free`'d later on. This check simply ensures that that assumption always holds, to ensure we fail early if ever a bug is introduced that breaks that assumption.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/89334fb15c688e7dbd81878745755db01579ea70,Device Version,2024-01-05 5:07:14, [NVIDIA] Update VersionCheck APIs for CuDNN. This PR updates the cudnnXXXVersionCheck to the latest for the next CUDNN release.,,Missing,Unexpected Behavior,add,If Checker,Valid Device Version,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/6c472f6632c4864da749e7a4aee8c001a905287f,Device Version,2023-12-08 16:36:13," so suggest to use check `CUDA_VERSION` at `12030` here, for `maxSize`, resolved directly in the same way",,Improper,Unexpected Behavior,update,If Checker,Valid Device Version,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e1dbfeba8acb1df8f42dfa6f76262f5cb23e1fa1,Device Version,2023-11-28 23:24:49,[stream_executor] NFC: Guard new features with CUDA_VERSION check ,,Missing,Unexpected Behavior,add,If Checker,Valid Device Version,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ac012e26d4331919335d4bceb8abe22b68ed5434,Device Type,2023-11-17 5:07:13,Don't assume GPU clients are PJRT-compatible. Instead explicitly check for compatibility.,,Improper,Unexpected Behavior,update,If Checker,Valid Device Type,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/20d54796563631c23c27548b321487e8b0c982a9,Null Value,2023-11-03 13:34:02," Add a nil check before init the device_name string, and also assign an empty string as a placeholder.",,Insufficient,Program Crash,extend,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/81ff894c113a5912ba52078ac27e36d06831112e,Boundary Value,2023-11-01 7:43:01,"[XLA] Add bounds checks to xla::Array::Slice. To guard against specifying limits that are out of bounds, which ends up touching OOB data.",,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e44f8a08051baa58bde9130a844a1b82a8179526,Type Checking,2023-10-31 15:18:59,"check hasattr on the type, not the instance. hasattr on the instance triggers __getattr__ which carries very undesirable effects, such as running Ops on a donated buffer.",,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1707ed9b9b0cc5cb02df22a06718c9c738825d39,Others,2023-10-26 22:00:50, Add a check to make sure that the allocation before an Evict() is not a prefetch.,,Missing,unexpected Behavior,add,Macro Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/893aa7518fe3175739ac1ba70d7355a0b091115c,Null Value,2023-10-13 16:12:05,Added a null check in string_util.cc ,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/63feaf321165e1e2795f43e3834c007364921df6,Edge Cases,2023-09-29 7:53:21,Add check for raster bits.,,Missing,Program Crash,add,If Checker,Others,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/450dec35448a73b3fcb5d4f82108d5fdcb3f59b4,Boundary Value,2023-09-25 19:10:37,"Internal change, add some checks on the sparseTensor format checking.",,Missing,Program Crash,add,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/11030308c5d25df5b36f8a583f1b4607e4ea2b7f,Edge Cases,2023-08-25 13:18:19, Add a check to check if all sharding strategies are dropped due to infinity costs,,Missing,Performance Degradation,add,Macro Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/5322fd40cd58cfa8c551e602fede7a3be19fff95,Edge Cases,2023-08-24 19:12:36," [PJRT] Fix checking for output sharding. Output sharding for empty tuple needs to have one ""replicated"" element.",,Missing,Performance Degradation,add,Macro Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e56206755ff0c98269eb3e50c98fccbaadb6884d,Tensor Quantization,2023-08-21 21:50:57, Support quantized i64 during flatbuffer import. Sometimes tflite flatbuffer represent `i32` quantized values as `i64`s. In these cases we should truncate down to a lower bit width to avoid creating illegal types. We check the bitwidth of the type at load time and pick a power-of-2 bit width where the value can be safely truncated.,,Missing,Numerical Error,add,If Checker,Valid Tensor Quantization,Tensor,,,‚Äç
tensorflow,https://github.com/tensorflow/tensorflow/commit/f636be3bb1f556c15dba3028e61a8969d90dadd9,Error Message,2023-08-16 14:23:04,Return error on invalid input in tfl.sign_custom,,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/43fd10302bcc8447e7a7205bae848a3a88624775,Edge Cases,2023-08-14 11:27:11,Return error on invalid input in tfl.atan2_custom,,Missing,Unexpected Behavior,add,Assertion Statement,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/00517642a356c5e04f009ea61c74638d89746392,Edge Cases,2023-08-09 9:07:32,Return error on invalid input in tfl.splitv,,Missing,Unexpected Behavior,add,Assertion Statement,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/40c7fe94824100338ef0c495143b26501b1c367e,Edge Cases,2023-08-08 11:22:26,Return error on invalid input in tfl.topkv2 ,,Missing,Unexpected Behavior,add,Assertion Statement,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b4aadb17b7aa5ea926b5220008e41f33e582baed,Edge Cases,2023-08-07 14:49:18,Return error on invalid input in tfl.where,,Missing,Unexpected Behavior,add,Assertion Statement,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9720b405905dee209a3f7d003de21d388e1aaef4,Null Value,2023-07-26 11:32:37, Avoid nullptr as row offsets to cusparseCreateCsr. As of CUDA 12.2 additional input validation allows NULL for the row offsets only when rows=0.,,Improper,Program Crash,update,Macro Checker,Object is Not Null,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e1ad3b74ad44b883c7b3fdc3a19adcea1d28bfbc,Edge Cases,2023-07-17 7:14:46, [XLA:GPU] Handle edge case in Triton Softmax rewriter where bitcast is an effective scalar. This short-circuit avoids crashing within last_dimension when attempting to match and either the operand or the result of the bitcast has a shape with rank 0.,,Improper,Program Crash,update,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/6e153325b66330dafea4e4e8b67b5d56b1a37852,Edge Cases,2023-07-14 7:46:03, [XLA:GPU] Handle edge case in Triton Softmax rewriter where bitcast produces a scalar. This avoids crashing within last_dimension when attempting to match.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/66e0cb1d9afd251931f4f920c5d7bd638bc882b4,Edge Cases,2023-07-11 5:43:29, validate clip_norm argument in clip_by_norm API. The API clip_by_norm have argument clip_norm which accepts  0-D (scalar) `Tensor` > 0 . But if we pass -ve value for this argument then its not raising intended error and converting the input tensor into Negative which IMO is wrong. Hence I am adding validation code for -ve values to raise value error.,,Missing,Unexpected Behavior,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/84a1cf61dd7239aa5d682083d34e0f7c99039734,Error Message,2023-06-27 5:23:38," [XLA] Do not suggest trying to use TF_XLA_FLAGS when failing to parse XLA_FLAGS. The error can be very misleading, as we never check whether the new flag is actually supported by TF_XLA_FLAGS.",,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/62cb54f2caf48480dc6b3c1ce9629eaac4688f83,Edge Cases,2023-06-13 3:16:58, Set 2nd output shape for SparseSegmentReduceGradV2 Fixes a debug check failure.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4377a561b7757ed83757f07532e6564c42c286ba,Edge Cases,2023-06-06 15:17:00, Add a check for group size when sorting grouped AllReduces within a block.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/178d62a63ea043a4b9969b4cd6f8983eb8eae523,Error Message,2023-05-17 16:28:42, Update check failure to logging a warning for repeated computation placer registration. This is to bypass a duplicated registration issue seen in open-source build during TF/PJRT integration.,,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9a4b6b6bcc7a813162bf0378727950e321aca19c,Type Checking,2023-05-09 14:49:51,Add stricter type checking for tf.math.real (using is_numeric),,Improper,Others,update,Type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/84d7bf6f64fd9c8677f7f26511ce3031fe8d35a6,Type Checking,2023-05-09 14:44:28,Add is_numeric to dtypes.cc to check whether a data type is numeric ,,Missing,Unexpected Behavior,add,Type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/cd34289b744040974ebe81e1b1e88f1c752d68e0,Type Checking,2023-05-09 14:42:57,Update types.h to check if a data type is numeric ,,Missing,Unexpected Behavior,add,Type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/924f80a4fdb34230965a7a8a4476901847463645,Type Checking,2023-05-08 16:20:25,Add stricter type checking for tf.math.real. Fix for tf.math.real so that it only accepts tensors with numeric entries as input.,,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/47eaa828a1dd4bf50ec4203ef4bbb348b3ef0dd0,Null Value,2023-05-04 5:01:40,Add nullptr check,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8b742f8559e88474735d0a2c03e00da65e40b412,Edge Cases,2023-05-03 13:28:05,Fix check error on shape overflow.,,Missing,Numerical Error,add,Macro Checker,Valid Tensor Dimension,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8a2e7deb21f02e4072d6b62cf7f447b9264afe01,Type Checking,2023-04-20 14:41:01, Adjust checks for type(Tensor) to isinstance or is_eager/is_symbolic_tensor.,,Improper,Others,update,Type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ef049bdfc4f307c8b3a9dc480a90a5ff287f3d55,Edge Cases,2023-04-17 19:51:00,Add check for ResizeOutput return value in range.cc,,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c2ff14318050e26302785a49a1719d29ddcc91b4,Edge Cases,2023-04-12 12:01:41," [XNNPACK] Fix incorrect check in slice node. begin+size == input dimension is valid, e.g. input size is 3, begin is 2, size is 1.",,Improper,Program Crash,update,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1610da3f992487bd9a8181d1e83cae99fe1e34d9,Edge Cases,2023-04-10 16:56:07,add more sanity check on AvgPoolGrad op,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/edd9fb416e04b8ca4398c4eea65f14dc6704a44a,Edge Cases,2023-04-07 14:45:48, TfLiteTensorCopy returns an error status when src and dest bytes are not equal. So we don't need to check them specifically if we ensure the status of the call to copy (which we should do anyways).,,Unnecessary,Unexpected Behavior,remove,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/65c5dd69676db159ddd3a1fd7b2f6836dfe37f49,Null Value,2023-03-30 19:40:56, Add nullptr check for external registration init / prepare / invoke /free.,,Improper,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/685418cd85e09bc2117fa15bc1b6a75d21248348,Edge Cases,2023-03-30 1:25:19,maxpooling op should check that ksize must be positive. ,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a0dc73569fc193c1ce26a7bd2d4a8776e7b813ac,Edge Cases,2023-03-22 1:07:32,add check for empty cs_prev_tensor,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/2465d4e77654f0d4f7799bc46d5fd5812590acc6,Edge Cases,2023-03-21 21:59:56," Add a check in auto-sharding setup and die if the input mesh shape contains more than two shardable dimensions, which is currently not supported.",,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c2fc1f2b5a8b8152c43b81cf31394f3e0a2cb837,Null Value,2023-03-17 21:55:45,Add null pointer check,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/80b65ab79bf8dd6ec03c570b59a1208bb27fec24,Edge Cases,2023-03-13 18:16:22, Small fix to axis check for tfl.pack to tosa. There was an off-by-one error when checking the axis value based on the input rank.,,Improper,Program Crash,update,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8c3822edbb31cf71cedaf49f2167e45c1e2d0b83,Execution Mode,2023-03-13 15:53:59,Update the is_dtensor check to only run in eager mode.,,Missing,Unexpected Behavior,add,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/076f909b70b251daea6c443c9b1929b9745aed20,Edge Cases,2023-03-06 10:36:43,fix boolean expression in length check ,,Improper,Program Crash,update,Macro Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9a0de0ca6a39f3037e1be6ec740829863bcda3e8,Type Checking,2023-03-02 17:28:58,[XLA:GPU] Fix type check in IsMatrixMultiplication,,Improper,Unexpected Behavior,update,Type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a21ec782601aca6c7e0461093d72596f26229e44,Type Checking,2023-03-02 11:50:47, Use getattr instead of isinstance in tensor_conversion_registry. Using `isinstance` to check if an object is an instance of a Python `typing.Protocol` instead of using `getattr`/`hasattr` has negative performance implications. This change reverts `tensor_conversion_registry.convert()` to use `getattr` for this reason.,,Improper,Performance Degradation,replace,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ab60b0ee51a8924a0f02b0152cd6a78ba64d3e94,Boundary Value,2023-02-22 14:57:10," [tfg] Fix named-attribute token check. Since the name tokens are being indexed directly, we should check that list of tokens is not empty to prevent an out-of-bounds error.",,Missing,Program Crash,add,Macro Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/48d3e51a1bd128554dd129251a51b6e12918a604,Edge Cases,2023-02-16 17:56:06,Add a check to HandleFromInput to ensure that the resource isn't empty. ,,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e99e31597c1b5cc9f0cbc8a3dea71674d81c20b1,Error Message,2023-02-15 15:44:47," Fix GRUCellBlockOp message for invalid rank of x. The validation checks that x is a matrix, so rank must be 2.",,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a63f3006f703428ff980748cdbe24d6a13f761e2,Execution Mode,2023-02-14 19:05:54,Skip checking for graph_key in V1 optimizer when running in eager mode.,,Missing,Unexpected Behavior,add,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/5ed3c7881f1f039b1bb502eb68c65250de3bbac8,Edge Cases,2023-02-08 11:56:20,"Fix ThreadPoolHandle 0 nthreads argument. It was reported that a value of 0 leads to a check failure.  Using 0 to indicate `port::MaxParallelism`, for consistency with `Dataset`.",,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b677392e4af8095dbde8068b0ceb60bca815e94b,Null Value,2023-02-07 15:11:02," Reject non-PjRt devices in PjRtArray::Reshard(). PjRt buffers traditionally support some degree of interoperability between PjRt clients (e.g., CPU and TPU). However, this is not universally true between arbitrary IFRT clients that may use a non-PjRt-compatible runtime. This change adds extra checks to make sure that non-PjRt devices are not accidentally used in PjRtArray's destination devices.",,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/dd7d791e02396346d98b7b2c58137d7e51756c0c,Execution Mode,2023-02-03 18:21:11,Add isinstance check for eager execution.,,Missing,Unexpected Behavior,add,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9d3cce4c7525bad6743f84302e5f6355a3fd8fe5,Edge Cases,2023-01-09 17:12:32, Fix crash in BlockLSTM. This PR tries to address the issue raised in 58175 in addressing the crash of BlockLSTM when invalid input is provided.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/fe4f74018ec6a7dff2718ea59d0f317460c0b3ad,Edge Cases,2023-01-04 15:08:26, Temporarily check for empty proto fields to avoid a crash for old cached traces. We can remove this code once we land all the necessary changes and invalidate all the caches.,,Missing,Program Crash,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/2c72ca8c439d64268e849ef81cde78f464e95ca2,Edge Cases,2022-12-21 20:45:40,"add rank checking for ADD, MUL, and DIV ",,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/662128e8ca3411286b234553a7efc1356353d0f5,Edge Cases,2022-12-21 20:22:55, add rank checking for MEAN op. The MEAN op of NNAPI only supports a tensor with rank <= 4. Check the rank of the input tensor before delegating the op.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b8431494de404b5f4def7303fb8efd6ba3575ef9,Error Message,2022-12-01 17:41:46,Fix error log messages in data type checks,,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1908d7ef706f0f3f8c7a300068355bf795fb3d17,Boundary Value,2022-11-14 4:23:12,"Fix out-of-bounds StringPiece access in ForwardNUTF8CharPositions().  Even a simple invocation like 'int p = 0; ForwardNUTF8CharPositions(""a"", 1, &p);' will cause an invalid access to in[1]. Checking for *pos < size before that access fixes this issue.",,Improper,Program Crash,update,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/258233804f2bc92b4bdb9714b396aed34b53ff0d,Edge Cases,2022-11-10 12:37:36, sanity check of empty tensor on avgpool3d_grad,,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c676a2d7ce8884aad59ca9cd5f45e9b851574cac,Edge Cases,2022-09-30 14:21:09, [tensorflow] Add a check that strided slice op strides argument has reasonable size,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c56d0cd8ce8239ee369fac1ae6b9cae67fd4c447,Edge Cases,2022-09-29 15:48:46," Avoid signed integer overflow when loading tensors with both 0 and large dims. `TensorShapeBase` ensures `num_elements` doesn't overflow when adding a new dimension. However, this check is insufficient to prevent other functions that use a different multiplication order from hitting an overflow _if any of the dimensions are 0_. For example, Eigen currently multiplies dimensions in reverse order, so dimensions of (0, 4294967296,4294967296) will trigger an overflow in Eigen code. To prevent overflow for all multiplication orders, we can that `num_elements` doesn't overflow if zero dimensions are skipped.",,Missing,Numerical Error,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e6df768b81e973f2123bc83a18a60773fc4da99e,Type Checking,2022-08-22 19:49:41,[TFG] Fix IsAdd string type check in tf_op_names ,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Object Type,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/eb2ddc0debb7e1b0c9ea68c817ca05fd59dc7914,Edge Cases,2022-07-29 1:48:28," In TF2XLA EnsureShape kernel, don't check whether the original tensor has dynamic shapes as it is much more expensive than just blindly clear out dynamic dimension.",,Unnecessary,Performance Degradation,remove,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f22ca1dc88c70a0dc5696c37e6a2de6bcf8d60c7,Edge Cases,2022-06-07 12:33:16," Avoid segfault when init_value is not on default_mesh. To actually fix the segfault in lower level (e.g. directly users of VarHandleOp), I tried to add a validation in SPMD of AssignValueOp, but turns out it only knows the resource_layout is an 'empty' layout without any mesh information. We shall start tracking mesh of empty layout -- but changing the data model at this point is not very easy to do or to justify.",,Improper,Program Crash,relocate,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/80bb2f5511e7d2d386c79da52ff517691e19ac54,Edge Cases,2022-05-24 11:40:36," Add check condition for large values of range_max, which is causing session abort.",,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/580140611a47413dcf6373deb1250c0ed605e873,Backend Type,2022-05-23 16:53:05, [XLA] Do not check fail in proto copy from if the backend config proto and desired proto type do not match.,,Missing,Unexpected Behavior,add,If Checker,Available Backend,Backend,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a68f57a24203fd49c4a5c4a8f51098d4415a93f8,Edge Cases,2022-05-11 14:21:59, [XNNPACK] Add missing return when output channels do not match in TransposeConvolution Add a check that input channels in the filter and tensor match.,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/08370e76523d5bece9ab28e7a9a902932e9a2cb9,Edge Cases,2022-04-20 8:55:36," Fix small issues with DispatchToVectorized. - Changes the base case of template recursion from VecSize=0 to   VecSize=1, because VecSize=0 will never be reached. - Adds handling of `alignment_of(zero/nullptr)`, which should be treated   as infinitely aligned. - Adds checks for preconditions.",,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/6b9189483513b0c663e23485834be64f51b076e4,Others,2022-04-19 18:46:27, Add device compatibility check for fusion. _FusedMatMul is not supported by GPU currently.,,Missing,Unexpected Behavior,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/0d5668cbdc6b46d099bd3abd93374c09b2e8121f,Edge Cases,2022-04-06 19:43:53, [XLA:SHAPE_UTIL] Return nullopt instead of a check failure if the input dimensions are not sorted.,,Improper,Program Crash,replace,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/824af2acfa0cdf897c08d91224aea0958c1afc02,Edge Cases,2022-03-29 13:44:03, Add ndmin check. Added ndmin check to allow maximum 32 ndmin to make same behavior as numpy. Currently it is crashing when very large ndmin is passed.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/199f1ff12a28d571100b323ec54a5eee47078d8b,Edge Cases,2022-03-17 11:04:54, Add necessary check in fft ops to fix crash. This PR tries to address the issue raised in 55263 where tf.single.rfft2d will crash when length contains negative value.,,Missing,Program Crash,add,Macro Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9c92b50fc4b95985a0749101976d04896bf19bfe,Edge Cases,2022-03-15 20:59:22," [conv3d_transpose] Fix dim check for bias. Per discussion with @thaink, the previous way to do the dim check for bias is not correct. So we need this change.",,Improper,Program Crash,update,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/18dd91ccd4b1817cd5c34e40f76823a162bea029,Error Message,2022-03-02 21:18:49," [XLA] Report that real -> complex bitcast_convert is not allowed. The check as exists is bidirectional: it prevents conversions from complex to real and real to complex alike, but the reported error message was unidirectional.",,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4f4a0276a2cf9186c0541072964676159368286e,Type Checking,2022-02-18 2:04:46, Add appropriate PyObject type check for bool. This PR fixes an issue where PyObject type in tf's C bindings does not check if an input is a boolean and will always cast to bool.,,Missing,Unexpected Behavior,add,Type Checking API,Valid Object Type,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/88609e2e22fa5c296de2e27e04d1cc4743b2dfcd,Type Checking,2022-02-17 19:01:10, Add appropriate dtype check for tf.boolean_mask's mask. This PR tries to address the issue raised in 54412 where mask's dtype was checked in tf.boolean_mask and an invalid result has been returned instead.,,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/86abddb56350bccd95d1b7140b003fb03525b890,Error Message,2022-02-17 18:11:34, Add appropriate error check for nbins in tf.histogram_fixed_width_bins. This PR tries to address the issue raised in 54415 where nbins was not checked for tf.histogram_fixed_width_bins and an incorrect result was returned when nbins < 0.,,Misleading,Confusing Error Message,improve,Assertion Statement,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/19b2e1b5868a044df4622ef7e26fa5570ca52e5e,Edge Cases,2022-02-11 18:15:25,Only perform scalar check for a tensor shape if it's not empty.,,Insufficient,Program Crash,extend,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e6390bc13471f28f211cab874cc49a123505dc3e,Edge Cases,2022-01-28 18:22:05, Update histogram_ops.py. Added the condition to check the negative value of nbins input,,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/6364463d6f5b6254cac3d6aedf999b6a96225038,Boundary Value,2021-12-16 18:46:23, [lite] Add some safety checks to avoid out of bound access for sparsity format,,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e5b0eec199c2d03de54fd6a7fd9275692218e2bc,Edge Cases,2021-12-14 20:13:47, [lite] Add validation check for dilation height/width to be positive integers.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8c6f391a2282684a25cbfec7687bd5d35261a209,Edge Cases,2021-12-14 16:45:48, [lite] Add check for bias_size is zero to avoid division by zero. This shouldn't happen for properly converted models. Just safety check,,Missing,Numerical Error,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1b54cadd19391b60b6fcccd8d076426f7221d5e8,Edge Cases,2021-12-10 12:51:09,Add missing validation to sparse dense cwise ops.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b51b82fe65ebace4475e3c54eb089c18a4403f1c,Edge Cases,2021-12-09 17:41:08, Add missing validation to AddManySparseToTensorsMap. Sparse tensors have a set of requirements for the 3 components and not all of them were checked.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e560136d757867482a93be74e108ef516920bcfc,Edge Cases,2021-12-09 3:00:55, Fix wrong output of tf.stack with 0-dimension tensor. This PR tries to address a bug where tf.stack will silently output wrong result with 0-dimension tensor. The issue was that the shape check was skipped when num of output elements was zero.,,Improper,Program Crash,relocate,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d23458fdd2655c83ff9d54725062ded31b644ba4,Edge Cases,2021-11-23 19:51:35," [XLA:CPU] Do not check that the size of the XLA parameter buffer is exactly equal to the size of the underlying given buffer Instead, check that the underlying allocation is ""large enough"". This is also more consistent with XLA:GPU behavior. The mismatch can happen when the input comes from tf.where, which is backed by an allocation larger than is actually required.",,Improper,Program Crash,replace,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/23968a8bf65b009120c43b5ebcceaf52dbc9e943,Edge Cases,2021-11-20 2:22:12, Fix out of bound access in DequantizeOp by adding check for axis < input dimension,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1610f391833738972b538e4ee97f90dbd30fc745,Edge Cases,2021-11-19 17:14:37, Replace DCHECK with actual validation in AddRangeStats,,Improper,Program Crash,replace,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/41ab69692ede0db3422fa70bc5889d470741e69c,Edge Cases,2021-11-19 10:24:55," Check for tensors to be vectors in BoostedTreesSparseAggregateStatsOp. Calling `tensor->vec` should only happen after checking that the tensor shape implies a vector. Otherwise, we can get denial of service via `CHECK`-fails",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8d733ecdb270dd90b2b5f53fd220d5ce17a5e20f,Edge Cases,2021-11-18 23:21:35," Check for tensors to be vectors in BoostedTreesSparseAggregateStatsOp. Calling `tensor->vec` should only happen after checking that the tensor shape implies a vector. Otherwise, we can get denial of service via `CHECK`-fails",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1595906c2192b7f402f746652042a592ad290378,Edge Cases,2021-11-18 22:27:23, Prevent CHECK-fail DOS in BoostedTreesSparseAggregateStatsOp. Calling `tensor->matrix` should only happen after checking that the tensor shape implies a matrix.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/54c94431e5dd17fc46d99da1a3f132c76414c161,Edge Cases,2021-11-18 22:22:30, Prevent CHECK-fail DOS in BoostedTreesSparseAggregateStatsOp. Calling `tensor->matrix` should only happen after checking that the tensor shape implies a matrix.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/5d96267d907ac2119cbccf1416b749195e8fd8de,Edge Cases,2021-11-18 22:15:24, Prevent CHECK-fail DOS in BoostedTreesSparseAggregateStatsOp. Calling `tensor->matrix` should only happen after checking that the tensor shape implies a matrix.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/28dacabab5aac2963e37e622f4b157cf00d82662,Error Message,2021-11-17 10:06:17, [tf] Explicitly check that runner index is in bounds and runner is available,,Misleading,Confusing Error Message,extend,Macro Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/6381a7b127bd276a3817a93e5423b15a06c33419,Edge Cases,2021-11-15 17:00:13, [tf.data] Add a check for ram_budget == 0 to avoid division by 0 exception when ram_budget is not set.,,Missing,Numerical Error,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a7c02f1a9bbc35473969618a09ee5f9f5d3e52d9,Type Checking,2021-11-12 3:29:24," Validate real and expected type of arguments to cwise ops. Without this validation, it is possible to trigger a `CHECK`-fail denial of service.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4f38b1ac8e42727e18a2f0bde06d3bee8e77b250,Null Value,2021-11-09 20:03:42," Prevent null dereference read in GetInitOp. We have a map of maps. We test that the key exists in the first map but then we don't have any validation that this also means the second map has the needed key. In the scenariosc where this is not the case, we'll dereference a nullptr, if we don't have this chec",0,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/cb164786dc891ea11d3a900e90367c339305dc7b,Edge Cases,2021-11-08 13:35:56," Properly handle the case where SpecializeType() returns an error `Status`. If the error case in `SpecializeType()` is reached, then we would get a crash when trying to access the value of an errorenous `StatusOr` object",,Improper,Program Crash,replace,Macro Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b73a3c21a224f479af8d3b8af320c220a091906c,Edge Cases,2021-11-03 10:25:02,[XLA] Add check for potential out-of-bound access.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/aaa3fb49374d59c89115730c8e2f672e70b9e3fa,Null Value,2021-10-21 18:20:22," [TFLite] Bucketize op: Fix processing of bucket boundary array. The param value may be a nullptr, which is an error; we should catch this and avoid dereferencing it.",,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/67b6c880e39ba02ba53c7d499e45fd136090ee32,Edge Cases,2021-09-21 10:34:46," In tf.map_fn: skip sanity check for shape of first value in elems if it doesn't have a shape attribute. (E.g., this can happen if it's a CompsiteTensor.)",,Missing,Others,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c5019e2156c749d35ec786ff7946a55006d9ba91,Null Value,2021-08-30 11:23:38,missing checking on null pointer dereference,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/63753d5f1531b17cf8cbbf1d8b77c16edcfb9711,Edge Cases,2021-08-18 20:02:15, Change DCHECK_LE to DCHECK_LT when checking invariant on original indices for sorted items Indices of items should be strictly smaller than the size of the vector.,,Improper,Program Crash,replace,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4923de56ec94fff7770df259ab7f2288a74feb41,Edge Cases,2021-08-02 16:57:19," Don't do any work when reshaping 0 elements sparse tensor. If reshaping to 0 elements tensor, check that input has no elements. If reshaping no elements input, check that output has no elements.",,Missing,Program Crash,add,Macro Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f2a673bd34f0d64b8e40a551ac78989d16daad09,Edge Cases,2021-07-30 22:12:41,Add missing validation to matrix_diag_op.cc,,Missing,Program Crash,add,Macro Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/532f5c5a547126c634fefd43bbad1dc6417678ac,Edge Cases,2021-07-30 1:54:59,Prevent nullptr deref in validation of indexes in map ops. ,,Improper,Program Crash,update,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/102cacf28ad5a9e7f00b5a195d1995ead8870006,Edge Cases,2021-07-30 1:31:35,Add missing validation to maxpooling_op.cc,,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1071f554dbd09f7e101324d366eec5f4fe5a3ece,Edge Cases,2021-07-29 21:27:51, Add missing validation to RaggedTensorToSparse. There needs to be a check that the splits allow for valid ragged tensors.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9e62869465573cb2d9b5053f1fa02a81fce21d69,Edge Cases,2021-07-29 19:35:05,Add more validation to RequantizationRangePerChannel. ,,Missing,Program Crash,add,Macro Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/429f009d2b2c09028647dd4bb7b3f6f414bbaad7,Edge Cases,2021-07-28 16:43:55, Add remaining missing validation to `BoostedTreesCalculateBestFeatureSplit`,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/eb921122119a6b6e470ee98b89e65d721663179d,Boundary Value,2021-07-27 20:20:51,Prevent heap OOB read in TFLite's gather.cc. Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.,,Improper,Program Crash,update,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/bb6a0383ed553c286f87ca88c207f6774d5c4a8f,Boundary Value,2021-07-27 18:25:33, Prevent heap OOB read in TFLite's gather_nd.cc. Passing negative indices is illegal but there was a missing check so that resulted in OOB accesses.,,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d94ffe08a65400f898241c0374e9edc6fa8ed257,Edge Cases,2021-07-27 17:52:03," Prevent an OOB read in expand_dims.cc. The for loop that follows this check assumes that `axis` is between `0` and `input_dims.size`. If user supplied `axis` is negative, the if code before this check is supposed to bring it back to positive (similar to how in Python one can do `l[-3]` to mean `l[-3 + len(l)]`).",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8933b8a21280696ab119b63263babdb54c298538,Tensor Quantization,2021-07-16 13:27:37," Fix a null pointer exception caused by branching on uninitialized data. This is due to not checking that the params for the quantization exists. If there is no quantization, we should not access the `.params` field.",,Missing,Program Crash,add,If Checker,Valid Tensor Quantization,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d7ec7b9415181fce88ea8fde39af9e8be5a8be97,Edge Cases,2021-06-22 14:20:17,Added generic check that shape has not more than 4 dimensions.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9f8ad5ff118166537d42f87f1ee254f83ba553f0,Device Version,2021-06-08 13:15:31,Fix CUDA version check (format is 1000 * major + 10 * minor). ,,Improper,Unexpected Behavior,update,If Checker,Valid Device Version,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/75c45e54bd37932f26d6e7cb36920c06a7833d52,Null Value,2021-05-11 14:51:01, Added sanity checks on the existance of nodes to ConstantFolding. This should fix null dereferences in ConstantFolding on fuzzed inputs.,,Improper,Program Crash,update,If Checker,Object is Not Null,Computation Graph,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/63c6a29d0f2d692b247f7bf81f8732d6442fad09,Edge Cases,2021-05-05 21:18:17,"Add missing validation, prevent heap OOB",,Missing,Program Crash,add,Macro Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f6f62119587baf8ccb7378ceac86bacd2db2863d,Edge Cases,2021-05-05 19:09:09,Add missing validation in maxpooling_op.cc ,,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a3d9f9be9ac2296615644061b40cefcee341dcc4,Edge Cases,2021-05-05 18:24:00, Add missing validation to pooling_ops_3d ,,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/31bd5026304677faa8a0b77602c6154171b9aec1,Edge Cases,2021-05-04 20:46:54, Prevent check fail in FFT ,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1c56f53be0b722ca657cbc7df461ed676c8642a2,Edge Cases,2021-05-04 20:18:39,Fix a check fail in Fast Fourier implementation ,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/27bd8aaa7b58d2591fed43a6c245f3037664cfb1,Edge Cases,2021-05-03 23:40:32,Fix another Eigen missing validation ,,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/22783fdf812b700f7de9980038ab41ee0a4a2284,Boundary Value,2021-04-30 18:28:52,Add checks recently removed ,,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c59c37e7b2d563967da813fa50fe20b21f4da683,Edge Cases,2021-04-28 20:54:22," Prevent array write out-of-bounds. If user passes an invalid axis, then we copy one too many dimensions to the output in the loop below these checks. Even if we didn't do that, there will be further issues with an invalid axis, so we check for that right now.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/480641e3599775a8895254ffbc0fc45621334f68,Edge Cases,2021-04-24 19:51:15, Validate (and ensure validation sticks) inputs for `MatrixTriangularSolve`.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d6ed5bcfe1dcab9e85a4d39931bd18d99018e75b,Edge Cases,2021-04-23 14:54:50,Add missing validation in QuantizedBatchNormWithGlobalNormalization,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4ea68093eeaf4c4157368668afd7f809b806a504,Edge Cases,2021-04-23 14:38:51,Add negative parameter validation to convolution layers. ,,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1223335a8d34a8ce656dbd10b2a236ef6204ff47,Edge Cases,2021-04-23 14:35:07,Add negative parameter validation for recurrent layers. ,,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/64afe2d199ec4513223bbf5176835bf681cf056b,Edge Cases,2021-04-23 14:28:05,Add negative parameter validation to Core Keras layers. ,,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/551a90f2e3d20420d68a2796d19f1c42b6636e0d,Edge Cases,2021-04-07 8:50:41," Add checks in ReduceWindowOpOnTensorsConversion. The pattern does not support ops with non-zero padding config. Add a check to prevent unexpected lowering. It is not easy to add tests because other patterns will convert body ops, and it causes issues like invalid IRs.",,Missing,Program Crash,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1e5c11676dce37bb7c8eb58b35fd298a655c6fd3,Error Message,2021-04-05 14:21:08," [tf.data service] Include dispatcher address in version check error message. This is the error message that happens when the address was specified incorrectly, so it is useful to include the potentially-incorrect address in the error message.",,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e07e48b2e0908333a36f1c5726a9406a83b3ec90,Edge Cases,2021-03-15 16:04:19,Added a check on literal_.has_value() to avoid segfault. ,,Missing,Program Crash,add,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/582bf0d3ac33fc10156f737c0d42f3adee54409a,Edge Cases,2021-03-12 2:39:10," Update the tflite model ""buffers"" field checking rule. If we don't use ""--force-empty-vectors"" flag[1] for flatc, the buffers might be a null ptr if we serialize a model with zero buffers size(e.g. all ops in model doesn't use const weights in model). This commit relaxs the ""buffers"" null ptr checking for this situation, and also updates the ""subgraphs"" checking for null ptr dereference.",,Insufficient,Program Crash,extend,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9b0f99ddd27e7738732a154be5469391ee8fc977,Edge Cases,2021-02-15 21:11:49,Add check to ensure element sizes are the same,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b1c9e600e02b93885dbebfa5dae92436c63d6c03,Boundary Value,2021-02-11 11:43:58,[XLA] Add range check for xla::Array<> indexing. ,,Missing,Program Crash,add,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/3c80be9f2cfece929f5858e7df0e7f4503c9baec,Edge Cases,2021-01-14 19:01:39, [tf.data service] Support num_consumers being a Tensor. The `if num_consumers >= 0:` check causes an error when num_consumers is a Tensor in graph mode: OperatorNotAllowedInGraphError: using a `tf.Tensor` as a Python `bool` is not allowed in Graph execution. Comparing to `None` accomplishes the same thing without this issue. Once the forward compatibility window expires we can remove the check completely.,,Improper,Others,update,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b6f3366a716ca9b5a1e6114a3bea050c80d8a475,Null Value,2020-12-30 17:42:46," Don't check for if null after already dereferenced. I'm not sure how it could be null at this point (and obviously it is nowhere else we'd have seen failures), but keeping the check as is and just moving it to where it would catch it before dereferencing.",,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/0666d8bb711b41c9f03dec238d7d165bc946fc70,Edge Cases,2020-12-14 18:11:16, Prevent crash of tensorflow if shape is too large for tf.sparse.reorder. This PR tries to address the issue raised in 45392 where tensorflow crashes if shape of sparse tensor is too large for tf.sparse.reorder. This PR adds additional checks and exit gracefully if the shape is too large.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8cef4cda26e08256b6698e942820d9a3ac1bcc94,Edge Cases,2020-12-11 1:22:43,Add minor checks for data_format and padding value ,,Missing,Unexpected Behavior,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e7de472681079932b2547024f31c876da54f61a0,Tensor Quantization,2020-12-07 18:36:46, Fix a bug in flatbuffer importer that use tensor quantization before checking.,,Insufficient,Others,extend,If Checker,Valid Tensor Quantization,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/15c186bffe51901e4a48b4b6bf1316832533743f,Edge Cases,2020-12-04 21:17:13,Correctly handle the case if static maximum dimension size = 0. ,,Improper,Program Crash,update,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d414a925a73553e4dd0d559d2d275668a298dab4,Boundary Value,2020-11-18 5:49:04, Check against the size of a std::vector to prevent out-of-boundary access.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/459b4bfe1f73737fae23aa1499b06a69605d0f65,Boundary Value,2020-10-26 20:56:11,Added a check in EagerExecutor to avoid getting invalid range. ,,Missing,Program Crash,add,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e1eb6d9cfa14368442f0d172a40f87ce4f094386,Null Value,2020-10-18 21:45:15,Add CheckArraySegments() to model verifier. Add additional logic to check nullness of array segments vector.,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/0d65cfaab050295c311d9f2fb28388435359db27,Type Checking,2020-10-12 14:00:39, Add an additional NoneType check when converting a traced tensor to a `KerasTensor`.,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/bd1f1ac1fec05d38f1b8fc98f650c1c55ac06790,Edge Cases,2020-10-06 9:04:33,Fix operator check ,,Improper,Unexpected Behavior,update,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9ce847ed140702d1dd4cb204a8afe0ffedb70b15,Execution Mode,2020-10-02 19:04:32," Remove a few check ops that no longer need to run in tf.Variable's constructor. VarHandleOp ensures there is no sharing. These aren't a huge part of startup time for replicated models, but there's still no reason to run them.",,Unnecessary,Unexpected Behavior,remove,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/402d478a107e2931fb0e9b2f08f973997cae7f98,Edge Cases,2020-09-28 17:04:28,Move the checking of ranks for early exit,,Improper,Program Crash,relocate,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/076ea8d84c2058b0d01d56dd9ddc3221a2e0c817,Edge Cases,2020-09-28 14:07:24,Also check dst_format,,Insufficient,Program Crash,extend,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9b947dd6377c022091c8aa005cdcff52c53ff5f0,Edge Cases,2020-09-23 15:04:10,Also check dst_format,,Insufficient,Program Crash,extend,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ce589223a5fa78cb12efaf1efd1d8d0e5507bd08,Edge Cases,2020-08-13 12:04:20, Update nn_ops.py. Added check for pooling_ratio,,Missing,Unexpected Behavior,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/cddca76312f5ae4fb92a101e79eeff6d5ac16932,Boundary Value,2020-08-03 14:41:16,Add check for reading input tensors at an index that is out of range. ,,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e82a377de614fed51da8a7c5242a90a7967169f2,Edge Cases,2020-07-24 23:29:28,Correct axis check,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/264eb6ed1dbfb5e078c7dd977da8d7e633106fc5,Computation Graph,2020-07-13 14:33:03, Fixed add bias transformation. Added check for convolution with dynamic weights.,,Missing,Unexpected Behavior,add,If Checker,Valid Computation Graph,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/26cd260fac5fa98ade11ff2a5ec38ede65631cc0,Null Value,2020-06-30 15:48:22,Add additional data validation while saving and restoring iterators. ,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a17858f3cc5e7ab4ebc2c166d71e7f85b2dad05d,Null Value,2020-06-24 12:54:27, Avoid undefined behavior by checking for null Operation in TF_Input/TF_Output,,Insufficient,Program Crash,extend,Ternary Operatory,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1835465ac5a9c823f7187cb0dd5786da9c360838,Null Value,2020-06-09 17:07:19, Add error_reporter DCHECK back into SimpleMemoryAllocator. This check was removed due to an internal build problem.,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b68b869e75916e6de37c2ca23a93643faf333011,Type Checking,2020-06-09 16:59:23,Fix invalid keras tensor isinstance check,,Improper,Others,update,Type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/0317f64491ba42376d96b157983a02d8b31b679e,Execution Mode,2020-06-06 2:02:56," Update RNNCell._rnn_get_variable to use Variable._trainable in TF2 mode. When using a legacy RNNCell in TF2 mode within a tf.function the ""var in trainable_variables()"" check led to treating a tf.bool tensor as a Python bool. This change makes use within a tf.function use the same logic that is used in Eager mode.",,Improper,Unexpected Behavior,replace,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/70fd126d3afb8a1d00299c28ab234623d2b88704,Type Checking,2020-06-03 19:35:48,"In case user pass non-string as a tensor name, the code raises ValueError. One common mistake is to specify tensor object instad of its name. Unfortunately, in this case current implementation fails to produce an error message resulting in misleading errors like shown below. ",,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/dedac5053f1ca2d6a7820e330714e50d2d724cee,Edge Cases,2020-05-28 0:45:36, Fix edge case bug in handling FP16 weights in XNNPACK delegate. Quasi-static tensors may become subgraph outputs after partitioning; we need to explicitly exclude them from outputs and treat as static tensors.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/07898e752cf02518508f193a0be2e451450044bd,Error Message,2020-05-20 14:31:08, Provide a more informative error message when the bazel version check fails. ,,Misleading,Confusing Error Message,improve,Assertion Statement,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/db9b247cd1f3ff046359f7b64ca60c2d697fe2e1,Type Checking,2020-05-13 22:56:36," Fix the functional model loading with nested sequential model. The nested sequential model is created with _is_graph_network = False, the current instance check is not strong enough.",,Insufficient,Unexpected Behavior,extend,Type Checking API,Valid Object Type,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/0e3574d39c66d937fa9f9d2e25554aab0066f250,Edge Cases,2020-04-22 11:33:35,Add rank check to Sub op delegation to NNAPI,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4a8d8518fba1d70f63633775695f1a5189cd252f,Null Value,2020-04-15 19:00:49, Add checks that the Allocate function returned successfully. ,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/01e84d7cc214dbf5a7a21bc418ad43afb5694fbc,Error Message,2020-03-31 12:34:49, Update error message for data_adapter with validation split. Remove the user provided value in the error string in case it contains large amount of data. Dump large input data to log might crash on user side.,,Misleading,Confusing Error Message,improve,Assertion Statement,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f61175812426009a4c96e51befb2951612990903,Edge Cases,2020-03-26 14:25:22,To add a check of input_dims greater than zero in embedding layers. ,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/48393637f8154be16088d84742485a0e153ecbb2,Edge Cases,2020-03-03 1:58:36,Change check to allow tensors with up to 6 dims.,,Improper,Program Crash,update,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a0fe44410e875e8e7775c6c256496bafb1a41b25,Edge Cases,2020-03-02 12:07:54, Remove the check of NodeItem exists in unfinished_nodes_ in node callback. This fixes the failure of RemoteAsyncTest.test_out_of_range_with_while_loop in DEBUG mode.,,Improper,Program Crash,replace,Macro Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a7908e924af3105c3007988e219855174b26774f,Null Value,2020-02-25 18:55:18,Added check for output buffer ,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/2adf1114d4dc7ca30e5117acd2dc7aeb3279feb7,Tensor Quantization,2020-02-14 21:35:27, Make NNAPI delegate only apply overflow check to quantized average_pool,,Missing,Numerical Error,add,If Checker,Valid Tensor Quantization,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d79c4d435fc6e7be6cc69a3ca446716ebf6190b9,Type Checking,2020-02-14 21:24:46,change default value of num_threads to Non. set num_threads before delegate. check the type of num_threads before setting it,,Missing,Program Crash,add,If Checker,Valid Object Type,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/be5116dd131a92da298dbb68d26e0d47f66f2fe5,Execution Mode,2020-02-13 15:15:20, Correct graph check in broadcast_to gradient. ,,Improper,Unexpected Behavior,update,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/5bc536f1afbaff5d3d5a14a9185cd1e3cc31b302,Type Checking,2020-01-07 20:21:14,[Fix] bug fix during check static shape.,,Improper,Program Crash,update,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ba91c04e001f417641e757a6417e5325c1c4e15e,Edge Cases,2019-12-19 15:09:00,Add more check to sparsity parameter verifier.,,Insufficient,Program Crash,extend,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/cc560f64b6e3e6724517757e9789c52cde224ee9,Edge Cases,2019-12-13 20:22:18, Profiler: restore correct behavior of StartTracing with empty workers list. absl::StrSplit behaves differently from str_util::Split when the passed string is empty. Restore previous behavior by explicitly checking for an empty string.,,Missing,Program Crash,add,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4863013a3ec5b97c042a38ab567bcc4a62ccde5c,Boundary Value,2019-12-13 19:34:20, Add checking for number of inputs in GetOptionalInputTensor to avoid indexing out of array bounds.,,Insufficient,Program Crash,extend,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/3e0152a8b4aad03dd06274e0dd3b94bd5f8bf5d3,Others,2019-12-04 22:40:35,"Fix invalid syntax error when import carla is present. The issue is that, when `import carla` is invoked, I/O operation for `std::ostringstream s` might fail, which caused the conversion of AttrValue to string as empty. This PR check `s.good()` to make sure the I/O operation is OK, and, fallback to normal conversion if locale-neutral I/O operation fails.",,Missing,Unexpected Behavior,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f482488b481a799ca07e7e2d153cf47b8e91a60c,Boundary Value,2019-11-21 19:37:21, TFLite OpenGL ES delegate: out of boundary writes fixed for bhwc->phwc4 conversion.,,Missing,Program Crash,add,Checker API,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/677866210941431b82c95d58d0798976bb40a415,Null Value,2019-10-28 3:30:19,Add a nullptr check for the tensor quantization field,,Insufficient,Program Crash,extend,If Checker,Valid Tensor Quantization,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a680ed0bf03d5ca3b2c4a70c0d95eeebc20da6d6,Edge Cases,2019-10-17 20:10:41," For Substr check pos and len rank equality only when their rank is known. This fixes a bug where len has unknown rank, while pos has known shape. The WithRank(...) check returned error in such a case. Here we compare their ranks only when both pos and len have known rank.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7f9929732ced22fe8ef42a695dae39c1caf44608,Edge Cases,2019-10-14 23:20:18," For gather op, if params.shape[:batch_dims] is not the same as indice s.shape[:batch_dims], return an error instead of check fail ",,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ab0a5278d81ef34096775d5d56f11694cca2a785,Edge Cases,2019-10-05 3:18:42," Fix tf.assert_equal issue when one tenor is empty and another is non-empty. This fix tries to address the issue raised in 32082 where tf.assert_equal([], [1.0]) doesn't raise error. The reason was that in assert_equal `[1.0]` was broadcasted as `[]` and equal was in place in that situation. This PR updates the _binary_asesert so that it will check if x, y are both empty or both non-empty. If one is empty and another is non-empty, then assertion throws exception. This change is to not impact other ops that depends on the broadcast behavior.",,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ed06859189722af4dc8e4abd655926df066e587a,Edge Cases,2019-09-19 5:01:25,Add format check.,,Missing,Program Crash,add,Macro Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c040db5e9003cc20016586df9f2964db83b98c4f,Edge Cases,2019-09-12 20:48:49," [XLA] Add a defensive check in dynamic dimension inference to prevent scalar reshape with dynamic dimension. In theory we can just ignore a [1] -> [] reshape, but adding a check here for now.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/0197a2d8a3070af763cb67227835ee63df095e6d,Edge Cases,2019-09-02 19:57:38, Add a check to catch out-of-bound access on invalid Graphs. The existing Check trying to catch malformed graph is not robust when an op is registered with an expected number of inputs but has data edges beyond this.,,Missing,Program Crash,add,If Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e009644f034fa0ca4df910a812432cab3458d440,Device Version,2019-08-16 0:20:41,Add one error check in cuda_dnn for int8 to float convolution. ,0,Missing,Unexpected Behavior,add,If Checker,Valid Device Version,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b86513673b98ac6c4458033fcda718365539afae,Edge Cases,2019-08-13 14:32:38,added check for zero stride values to strided slice ,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a607eb012b1bc4f6dbe263ad99caa76d84ae3ab2,Edge Cases,2019-08-12 13:38:29,fix output shape check for strided slice always failing when stride != 1 ,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b234ff0ee4ce87d21a3e5306b678e1fb4b1fedfc,Device Availability,2019-08-06 12:59:40," Fixed division by zero, by checking the number of GPUs in GenericLayoutOptimizer.",,Missing,Numerical Error,add,If Checker,Available Device,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9baa064387b0a114c3fcec88abaa0568834e8e34,Type Checking,2019-08-03 10:37:29, Only apply check for non-tensor case ,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9c14f6ba30d96241978188998de47a388822365f,Type Checking,2019-08-02 20:44:03,Only apply check for non-tensor case ,,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/30bd9d5bcc64097d21872486a5726d756ed7067b,Type Checking,2019-07-31 18:32:21, Explicitly handle Tensors in start & stop. The current check was doing a identity check in order to handle both tensors and integers. This becomes problematic when enabling tensor equality. Instead we explicitly check for Tensor type and only compare with sys.maxsize for non-Tensors.,,Insufficient,Others,extend,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/89fa1ae2cb34eab0e6137e72e6fab01f6c5bc164,Null Value,2019-07-26 8:53:20,Fix check for cloning FunctionLibraryRuntime,,Improper,Program Crash,update,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/150a6c06b281246cb5a075a704fceeb257bb63af,Edge Cases,2019-07-23 22:53:07,Add a check on the 0th dimension of filter for DepthwiseConv.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/3a7b36bca7f43ce4f0d0791ce0e0d84ece8683d9,Null Value,2019-07-23 11:12:53, [Grappler] Remove DCHECK from a MutableGraphView CanDedupControlWithRegularInput check.,,Improper,Program Crash,replace,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/2e4d3951eb618a7c34d5e629fc2506ea2a62b4a7,Edge Cases,2019-07-01 9:53:56, Correct Tensor order for dilation2D. `gen_nn_ops.dilation2d` seems to be in `NHWC` while the parent function was asking for `NCHW`.  I corrected the doc and the check.,,Improper,Unexpected Behavior,update,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/467730fe90282a75f15f67d701b278e86cfad65e,Edge Cases,2019-06-22 21:53:59,Fix dimension check for tf.keras.losses.BinaryCrossentropy. The reason was that broadcasting was applied directly. This fix adds dimension check to throw an error if there is a mismatch.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1c49c13ba59961cf7581e3e29b951db8faca94f5,Type Checking,2019-06-17 5:56:00,Add type check for reduction axis in reducer operation. ,,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/43a8963c73718f97a4425722a65b611d2ef0b69f,Edge Cases,2019-05-23 19:04:02,Added non-negative check for n. ,,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1ff493ed1a2059f82f7607a7f0a0aa2ce8d5a542,Edge Cases,2019-05-03 15:05:12,Replace a defensive check with TF_RET_CHECK,,Improper,Program Crash,replace,Macro Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/867a918bd3d40afeca6b96430671a098134e7905,Device Type,2019-05-01 22:18:07," CUDA Driver: do better error reporting if checking the pointer properties failed. There are many reasons why an operation can fail, propagate the error instead of assuming the cause.",,Missing,Unexpected Behavior,add,Macro Checker,Valid Device Type,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/3acc8eaf602b3e9a009f54e1e0164644dd793831,Edge Cases,2019-04-28 4:06:23,Add sanity check for resize-bilinear input shape. ,,Missing,Program Crash,add,Macro Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f54bc43f1117004208df6da34e422bf628fc3c23,Error Message,2019-04-25 17:51:27, Update error message when tf.functions cross merge_call boundary when using MirroredStrategy,,Misleading,Confusing Error Message,improve,Assertion Statement,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7008e41f183ae9de3f4656067932b36afa822ef2,Edge Cases,2019-04-22 22:11:37, Fix the check for empty reduction indices. In the general case indices can be any rank.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/236660d0fccff6f59f29a1936dc731d783722e28,Edge Cases,2019-03-29 18:32:56," [XLA:GPU] Fix host conv checker canonicalization for f16 and nans. The GPU-side checker is correct, but the host-side checker was canonicalizing nan to F16_MAX.  The effect of this is that you'd get a ""conv mismatch!"" error but no description of exactly what mismatched.",,Missing,Unexpected Behavior,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/04b97cde86550995da57d16d81084006456ccce5,Null Value,2019-03-25 22:42:20,Fix segmentation fault with tf.stack an keras's Input in TF2.0. This fix adds the `PySequence_Fast` and checks the return value to make sure it is not nullptr.,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/31849c61e0432009baabdfafc2ec1a1aed1a40e8,Edge Cases,2019-03-22 15:14:52," Small change in tf.nn.sufficient_statistics to guard against unknown shapes. Use is_fully_defined instead of checking shape.dims[d] as the dims variable may be None, if the rank is unknown.",,Insufficient,Program Crash,extend,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/bf686faeddcca97be6ad7b6421cb26ab1c3cea2c,Edge Cases,2019-03-20 14:50:59,TFLite: Enhance input check for ResizeNearestNeghbor,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ed043aec4962dfdc3c58e2ad90dacb557dafcf4e,Null Value,2019-03-19 10:29:10, Lite: ResizeTensor Dim size check added to avoid reallocation if no change,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c2cec131f107fde9c54f48a9b74248617d850549,Edge Cases,2019-03-14 13:58:26,Add the shape and dtype validation for TensorDatasetOp,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b8c517ab4ef0bd851ef2f8187935fd3a90261af5,Execution Mode,2019-03-06 7:26:33,Reinstate eager check inside _GradientsHelper,,Missing,Unexpected Behavior,add,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/083fd8c4b23104f6b27a871c6469629ace4ee9c3,Edge Cases,2019-03-04 10:10:05, Don't check soname on Windows. This allow users to specify a certain CUDA version on Windows again.,,Insufficient,Others,extend,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ebeb598c2d1f341d6d641bf58c370cf7b43f6e37,Edge Cases,2019-03-01 20:31:59," Correctly check shape not None in Keras add_weight. When calling Keras add_weight with a np list, as written the `shape or ()` ""trick"" results in the following exception: """"""ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()"""""" This change fixes the problem by using an explicit `if`.",,Missing,Others,add,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1e38a0025c9a983bf3229299109b5b1781215c7e,Boundary Value,2019-01-30 17:18:25, [XLA] CHECK that sparse indices are in range in MutableLiteralBase::AppendSparseElement. Previously there was no range-checking on sparse elements' indices.,,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/823b694639a3f49b6adbf9e73a08c529d583878e,Boundary Value,2019-01-29 4:48:40,Add bounds checking when looking at the stack in TF Registry. ,,Missing,Program Crash,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1a73fdfa83bd50695a7d374d14a5cb3835d94d9e,Device Availability,2019-01-09 17:41:51, Add extra check incase segmenter does not exclude CPU in order to prevent segfault,,Missing,Unexpected Behavior,add,If Checker,Available Device,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c7c4a42c4372ca560ea415fe3a798e18286cedec,Edge Cases,2019-01-07 16:38:08,Fix an error in keras input_layer.Input() dtype type checking. ,,Improper,Program Crash,update,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7e2d53c1c371f38c7f0ef13c1c06336b22a195c0,Edge Cases,2019-01-03 15:51:36,[tf.data] Adds the expected check for better debugging.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7578e120de2a3a5282ced8d41881f19363f83466,Null Value,2018-12-09 11:22:52," Fix crash on closing the app when classifier failed to initialize. When testing on an API 21 emulator, the classifier fails to initialize. The fix is to check for null before calling `.close()`.",,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/25bae42b3022b00788a29ae6c400922c31f88231,Edge Cases,2018-11-27 21:46:06, Add additional length check for inputs ,,Insufficient,Program Crash,extend,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4c75fb1cb917320acb386cf26adeb8e5151ca4f6,Error Message,2018-11-20 13:01:44," Improve error message reporting for check_numerics gradient. At present the op message is only printed if the numeric check fails during the op's 'forward' computation. If the check fails during the gradient, there is no identifier on *which* op's gradient failed.",,Misleading,Confusing Error Message,improve,Macro Checker,Improve error message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c9b4689bc4d4024aa16b7d6cfc1c65fa1ed8486e,Execution Mode,2018-11-06 12:32:01,"Removed no longer supported call to in_eager_execution. Swapped context.in_eager_execution() to the currently supported context.executing_eagerly(). Added negation to eager check. In all likelihood, the negation was always supposed to be there since getting default graph in eager mode does not make sense",,Improper,Unexpected Behavior,update,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/2f3b69e4976d3b14eaa6ae070eb68f37d1556d98,Edge Cases,2018-10-23 16:30:07,Changed empty check ,,Improper,Program Crash,update,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/40918f36823973e816bd50766b1f447225b1bb9b,Error Message,2018-10-22 18:30:18, Make the type check error message more informative for contrib.layers fully_connected.,,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a12b8c4afdca3ac2945d62b3b83ca2599ab360f9,Edge Cases,2018-10-02 17:00:29," [xla] Improve validation of Broadcast shape. If one misreads the semantics of this instruction, it's easy to cause an out of bounds access into the dimensions here. Add an extra check to return a proper error to the user rather than crashing in that case.",,Insufficient,Program Crash,extend,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/5cedb0427bd4db4117182da8bc0680dd555b4f49,Edge Cases,2018-09-26 13:37:15,Add checks for dilation_rate. ,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/05ec322172958f6e67e4bcaef4681e6aa54fabeb,Edge Cases,2018-09-19 13:55:51, Return error message with illegal input rather than check-failing in op_kernel.,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a76646d4b4ad5d56b5e63c139985bbd1eb98dd90,Type Checking,2018-09-17 20:58:44," Add type checking at the beginning of tpu.shard(). Otherwise a message like ""TypeError: Tensor objects are only iterable when eager execution is enabled. To iterate over this tensor use tf.map_fn."" will be thrown, which is confusing.",,Missing,Confusing Error Message,add,If Checker,Valid Object Type,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f8ec0f101bac066faa2e917ac714ca9eea310eac,Edge Cases,2018-09-14 1:40:49,adding checks that pad fusion works only Conv2D,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/51d72a7d7f74784b68916819edd04e890b36f957,Type Checking,2018-09-13 17:59:05," Modified ""_check_is_tensor_or_operation"" to check if ""x"" is ""tensor_like""",,Improper,Unexpected Behavior,replace,Type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9c1f14322484e44a93b77619ffd2e24b9b7a9b1d,Error Message,2018-08-28 16:50:03, Fix error message in TF-keras dataset shape check. (Dimension and tensor # were transposed in the error message),,Misleading,Confusing Error Message,improve,Assertion Statement,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/abd645085b1dd1496df847b05a1934d471a2f2c0,Device Availability,2018-08-01 4:06:22," Use the correct device ordinal to check whether the device the executable was built for is equivalent to the device the it will run on. Before this patch, if the device to run on was provided via a stream without setting the device ordinal in the ExecutableRunOptions, we would check the default device against the device the executable was built for.",,Missing,Unexpected Behavior,add,If Checker,Available Device,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/27de8e717c1bec91398f5a6be6c7287b657fc960,Edge Cases,2018-07-27 3:20:25," Improve shape function for CudnnRNNParamsSize. In cudnn_rnn_ops.cc, the CudnnRNNParamsSize does not have restrictions on num_layers, num_units, and input_size, though they all should be scalars. This fix adds the shape check of num_layers, num_units, and input_size for CudnnRNNParamsSize.",,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/f0bf6c5191d224f229808f4b321158d890a481e0,Error Message,2018-07-25 17:47:41,Minor change for better error msg in eager input type checking ,,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8eb773d6c23de29dccfc3cf3da441a8552ed13ed,Edge Cases,2018-07-19 13:34:48,XLA] Better shape size validation for sparse arrays. ,,Improper,Others,update,If Checker,Tensor is Not Empty,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9596f534200201bc8206b297f17ec3c5cc9fcff8,Boundary Value,2018-06-21 15:35:45,Fix OOB check for result_index in header generation,,Improper,Program Crash,update,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/58759659ee547a957c5d36e72f2274ab34fdb6cb,Boundary Value,2018-06-20 14:02:39,Fix OOB check for result_index in header generation,,Improper,Program Crash,update,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/3550ef89bc66d03b6e2db8e47bf7b038d9f4ceff,Edge Cases,2018-06-18 17:17:23," Convert CheckInputsSize to return a Status instead of CHECK-failing, and convert existing callsites to TF_QCHECK_OK the call. This moves us towards the goal of returning Statuses instead of check-failing in ImportTensorFlowNode().",,Improper,Confusing Error Message,replace,Macro Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c1b9ac9f215a3a83f7f0b6233bf4cef0b3e74598,Null Value,2018-06-06 10:53:20,Error checking in c/python code.,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/4a1d1c8413a3752af7dc91a7128e202660b0f05c,Edge Cases,2018-05-29 17:15:16," Fix mismatch of shape restriction in DrawBoundingBoxes. In the kernel of DrawBoundingBoxes, the shape of the input images should be 4-D. Though in the shape function, at the end `UnchangedShapeWithRankAtLeast(c, 3)` was used instead (at the beginning of the shape function the validation is `WithRank(c->input(0), 4, &images)` which is correct). This fix address the discrepancy by changing to `UnchangedShape`.",,Improper,Program Crash,update,Type Checking API,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e4471c403a9e9430839900bd92c067d04580a51b,Edge Cases,2018-05-21 18:48:11,Add additional shape validation to `compute_accidental_hits`,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/694b75a24bce416555425dedc58b0cdcd0d52c1e,Edge Cases,2018-05-21 17:38:18,Shape validation of `max_features` in `QuantizedReluX`,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/5daf3b9131254baa1182fc29d63bafd4b055e0ea,Edge Cases,2018-05-17 18:12:24,Add shape validation in shape function of MapAndBatchDataset,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/181ca305a7954ce86a453a39db0b4f6d10b82720,Edge Cases,2018-05-15 10:51:40," Add shape validation in shape function of MapAndBatchDataset. In MapAndBatchDataset, batch_size, num_parallel_batches, and drop_remainder are 0-D scalars. This fix adds the shape check to those Inputs. Note since the Input of `other_arguments` is a list and is before `batch_size`, the shape of the `batch_size` and others could not be obtained through index like `c->input(2)` etc directly. It is still possible to obtain the ShapeHandle with names `c >input(""batch_size"", &batch_size)`, though.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/356f360e8772a2697ec0d30036237342549803f5,Edge Cases,2018-05-13 20:32:50," Add additional shape validation to compute_accidental_hits. In `compute_accidental_hits`, the `sampled_candidates` must be a vector, as is shown in the kernel implementation in `tensorflow/core/kernels candidate_sampler_ops.cc`. This fix adds shape validation of `sampled_candidates` in the shape function whenever possible.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7c88788e63f3a747d2794175076db551d768734e,Edge Cases,2018-05-13 20:32:31," Shape validation of max_features in QuantizedReluX. In shape function of QuantizedReluX, `max_value` and `min_features` have shape validation but not `max_features`. This fix add restriction to `max_features` as well.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ff6be80a1ec3c353ebd0d17e2f0b46d9097310db,Edge Cases,2018-05-11 12:48:32," Improve the shape function for ParameterizedTruncatedNormal.  The parameters of ParameterizedTruncatedNormal should be 0-D or 1-D, which is checked in ther kernel functions. There is no check in the shape function of the ops. This fix improves the shape function and checks the parameters of ParameterizedTruncatedNormal whever possible.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e5cfbd0eceb4dca98b388b13acff499a5420f863,Device Version,2018-04-22 23:00:54,Fix more for cuda version check. ,,Improper,Unexpected Behavior,update,If Checker,Valid Device Version,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/76619c8dea0e480fd48e3b4dcfe0249eb24216b8,Edge Cases,2018-04-19 12:13:53,Validation in shape functions of Dataset ops.* Add shape check for PrependFromQueueAndPaddedBatchDatase. * Add comment for shape check.  * Add shape check for FixedLengthRecordDataset. * Add check for filenames as well. * Add shape check for SqlDataset,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b71b6b8ca9ade8b39d77f0373210fe58dfccf4f4,Edge Cases,2018-04-19 12:13:35,Shape validation with random/shuffle related Dataset ops. * Add shape check for CacheDataset. * Add shape check for ShuffleAndRepeatDataset. * Add check for ShuffleDataset. * Add shape check for RandomDataset. * Add RangeDataset shape check,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/50f6683ca50e6d4e7008d6d1b437b407d6a62e92,Edge Cases,2018-04-19 12:13:21,Add shape check for batch related Dataset ops. * Add shape check for PrefetchDataset * Add BatchDataset shape check  * Add shape check for SlideDataset * Add shape check for DenseToSparseBatchDataset,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/edb29d02765b45e712042725dc06b65f5e610327,Edge Cases,2018-04-19 12:10:53,Add shape check to TextLineDataset op,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/9187be7adff07be82856add498aa3ff4b5f95998,Edge Cases,2018-04-18 12:05:05,add checks for compression_type and buffer_size also,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/779664494d43b18a812361197dcbea2f25912c02,Edge Cases,2018-04-18 8:12:14,Add shape check to TextLineDataset op,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/48f7e377963a951b77cbf111675931fd4248b090,Edge Cases,2018-04-17 17:59:50,Add shape check to TFRecordDataset,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c4dea2255c71037c9cade9cbd1d7820b3429b3fa,Edge Cases,2018-04-16 21:31:54,Add shape check for buffer_size with TFRecordDataset,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/d97ffbdf362fa7d06ef8d946c8620ff7a3a50a08,Edge Cases,2018-04-16 21:30:42,Add shape check for compression_type in TFrecordDataset,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7586dee9aa8b4b63143ab658ca59658aaed0df97,Edge Cases,2018-04-16 21:28:30," Add shape check to TFRecordDataset. The inputs of TFRecordDataset have the requirements for shapes. However, the check was not done in the shape function. This fix adds shape checks whenever possible.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/851177fee860211e2fabcb019d644e75b7f701b0,Edge Cases,2018-04-16 21:17:51,Add shape check for shift of tf.roll,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/3f796ff8c9e6d7ff88f99c056b78e88fb0b31114,Edge Cases,2018-04-16 21:17:51,Add axis shape check for tf.roll,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/10467d29e05d9957a6e3cb2335f8eeba1fd8896e,Edge Cases,2018-04-16 21:17:51," Improve shape function check for tf.roll. The `tf.roll` op has requirements for the shape of inputs. However, the shape of the inputs are only done at the runtime inside the kernel. This fix improve the shape function so that the check could be done early if shape is already known in the shape function.",,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/fffbe5a26da2d6fab5a3eb648cefef49db4d38de,Edge Cases,2018-04-12 18:22:37," Check if the session has been deleted before releasing a callable. In some versions of Python, the Session._session field may be cleared (in `Session.__del__()`) before a callable that has a reference to that Session is deleted. Add a defensive check in the `Session._Callable.__del__()` method.",,Missing,Others,add,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7535f6beb7ba95bf54e1513b0c2c51b844a7a49f,Boundary Value,2018-04-06 12:56:07, Bounds-check node ID before getting it's name. When the edge is either a frame enter or exit edge then DescribeCycle() would segfault.,,Missing,Program Crash,add,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e5496b556734bb1d8de85311092804e0150b3009,Execution Mode,2018-02-21 8:27:17, Remove extraneous check for Eager mode.The check is already made once at the start of the method,,Unnecessary,Unexpected Behavior,remove,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/cb2828a844ccaf0394e602d15fd95e45073729a2,Type Checking,2018-02-02 20:13:17," Check that the type of an implicitly dereferenced tensor matches the expected input type. The dtype of a tensor reference can change between the point when it is ""produced"" by an operation and consumed by the next operation. This evades checks in the executor that the type of tensor on each edge matches the type signatures of the producing and consuming operation, which could lead to undefined behavior. Although there is no existing operation that changes the type of a tensor reference, it is possible to use the OpKernelContext API to do so, so we add a further check in the runtime to defend against operations that might be added in the future.",,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/201982013046116767545cda18137b38abb39468,Edge Cases,2018-01-08 16:33:45,toco: Fix missing check for buffer in ResizeBilinear.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/db10718b38b2884cb5ed46d33c135c079f649d16,Null Value,2017-11-03 23:09:38,"With some memory allocators, attempting to allocate 0 bytes will return a null pointer. This specifically happens when building tensorflow with mkl support. If TF_TensorData returns null, the go code to create a slice from the data leads to a null pointer exception. This fixes the issue by checking for the nil return and returning a slice zero value to (nil) to the caller. ",,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1d6dae88efef68dd7fbeeb5c39ea0f69c1c721c1,Execution Mode,2017-10-30 17:19:44,Add check to tf.device when called with a function in eager mode. ,0,Missing,Unexpected Behavior,add,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/cfb13fa789bcf1cdbbf0fd38cf7568b7098ab99b,Boundary Value,2017-10-17 17:01:03, Added an additional check on the length of the values and boundaries lists.,0,Missing,Program Crash,add,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7db8e4fbc0be952daea74a2c3f501183d6006e61,Edge Cases,2017-09-23 2:51:33, ENH: check x and y is empty dict,,Improper,Program Crash,update,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/645f2c0cef75e80cdcaaaceca94a785191b9f423,Edge Cases,2017-09-07 20:04:36,[XLA] Add a check to the HLO verifier for badly formatted Broadcasts.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/95166f5960322cc784a7e8f339a701da80a41a1e,Null Value,2017-08-03 22:57:12,Add a null check on enter_ctx and update the null check on merge_ctx ,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/b65d9ec2b78c7c23e368ed4eec7b4deb89dcd712,Edge Cases,2017-07-21 16:29:29,"Fix value error generated on is_scalar check. Fix value error generated on is_scalar check. `is_scalar = shape is not None and not shape` raises a value error when shape is a scalar, ""ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()""",,Insufficient,Program Crash,extend,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/e05f78a9b688a8ae37b1a03bfc4459e18e3b88e4,Device Availability,2017-06-14 1:19:53,"After synchronizing CUDA device, check for errors. ",,Missing,Unexpected Behavior,add,If Checker,Available Device,Device,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/70ade1b64f65d0a2275672d27129627ff116a997,Others,2017-06-13 19:58:21, Fix defect: shuffle_batch gives ZeroDivisionError when computing capacity stat. * Fix defect: shuffle_batch gives ZeroDivisionError when computing capacity stat. * Cover < case in error checking,,Missing,Others,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/7254b098e04c5deba029b06967803422cdf329e6,Edge Cases,2017-05-22 15:25:48,"InferenceContext::UnknownShapeOfRank support unknown rank, check rank>=0",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/41deb95a7bde735d3c8b9adedd8b1fe8c1ef2732,Edge Cases,2017-05-20 22:19:01,"support unknown rank, check rank>=0",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c7f79bb75b5b83c3011e164ccd617a6ada910ea4,Edge Cases,2017-05-10 18:29:07,StatSummarizer: Put size check error message outside of if block where it belongs.,,Improper,Confusing Error Message,relocate,If Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/0a9b39caefd437fec742ae48b25061abd6e2699b,Others,2017-04-28 21:04:24," When allocating GPU constants, check to see if the destination. tensor is intialized early (because we ran out of memory) and report it as such.",,Missing,Performance Degradation,add,If Checker,Others,Others,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/fa8381593d0cbe354cb54d691e0a8c42bf4b69d0,Edge Cases,2017-04-27 17:47:43," Move Batch op input validation before enqueueing to the batch scheduler, because earlier error detection is better (and also so batch->size() doesn't crash if #dims==0 :).",,Improper,Program Crash,relocate,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/bc7b64fe998cb0f118eace5bc29b52554eeda3f1,Edge Cases,2017-03-17 22:49:05, Added back the channel dimension check as a known channel dimension is required by creating beta.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/fb1c4cd8283f262bca95ccd04df6f9eb4ae1da0c,Edge Cases,2017-03-17 16:44:35,Add None check for seq_len_mask before reshape.,,Missing,Program Crash,add,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/ca170f34d9174d6981850855190a398393aa921e,Null Value,2017-03-17 16:27:50, [Tensorflow] Add check fail when user passes a tensor with nullptr to lookup.,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a0ca4bcb81dfd07fdb1c7872b5852f84cfc1a081,Edge Cases,2017-03-16 19:48:57,Fix separable convolution bias check,,Improper,Program Crash,update,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/cd8d0bf58ad554588012898161c91fa453bbf7f0,Null Value,2017-02-21 17:07:40,Address edge case where runStats is null and the interface is closed.,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/02703f9525696f4788496745f6756585c1c546a3,Boundary Value,2017-02-15 1:50:18,Fix crash in range sampler by adding a range check in the sampler op.,,Missing,Program Crash,add,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a5b8d6c4694e4cd3e3cc4a162053ab0dfa6e174f,Edge Cases,2016-12-02 13:20:52,Relax the check for whether the relevant aggregation dimensions are known ahead of time.,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Tensor Dimension,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/5e0c9fff657498f9a74da38b2ce1b4721698a388,Boundary Value,2016-12-01 12:46:02, Add bounds checks to jpeg parsing code. ,0,Missing,Program Crash,add,If Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/c6899c721f3a4b4f2e71ae4e6d1767341112ff93,Edge Cases,2016-10-06 19:38:54,bug fix when iterators stops at multiple of batch_size ,,Missing,Program Crash,add,If Checker,Valid Integer Argument,Integer Variable,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/8876a1796aeced8f89c279cbc98db9c7957ddbd1,Edge Cases,2016-09-22 9:03:33, Updated check for existence of TensorFlow objects to 'is not None' rather than 'if [object]'.,,Improper,Program Crash,update,If Checker,Object is Not Empty,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/aa54f547f04c3007b26df2379c6cf5f081948d0b,Type Checking,2016-08-18 12:16:11, Updated the check_numerics function to also validate the gradient corresponding to the tensor it's validating,,Missing,Unexpected Behavior,add,type Checking API,Valid Tensor Type,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/314d9cd9b607460f8bfea80fc828b1521ca18443,Null Value,2016-07-21 17:25:35,Fix segfault in MacOS when GPU is not available ,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/a93ac5f7d147ae8fe946de33ad654161ae851352,Tensor Quantization,2016-07-06 20:04:56," For quantization values where range_min == range_max, use the lowest_quantized.  Add needed checks for divide-by-zero.",,Missing,Numerical Error,add,If Checker,Valid Tensor Quantization,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/1220ba3ab332d6233a84d660cafb3d4e29958224,Boundary Value,2016-03-18 11:47:58,Fix two potential asynchrony bounds-check bugs in transpose op. ,,Improper,Program Crash,update,Macro Checker,In Range Tensor Indexing,Tensor,,,
tensorflow,https://github.com/tensorflow/tensorflow/commit/55aec0a33011773240f6696393952c984ca8de16,Edge Cases,2016-03-08 20:20:28, Add explicit not-None checks for the height and width in `resize_images()`. This was previously raising a `FutureWarning` when the height and/or width were dynamic.,,Insufficient,Program Crash,extend,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/f3a2094065c8b4b7bae426e71c923a8a8abb74b5,Type Checking,2024-02-09 13:24:09,"Mitigate legacy issue that aten op as export entrance function. This is not supported any more, now the top level ```torch.export``` only support ```nn.Module```, but there are still some tests using the internal APIs and caused the ```trace_rules.check``` assertion error. This PR is going to mitigate such cases.",,Insufficient,Unexpected Behavior,extend,If Checker,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/41902a6ebc1806e7f4d6ce1da604cc9921c6515e,Execution Mode,2024-01-29 3:31:26,Optimize is_tracing checks ,1,Missing,Performance Degradation,add,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/dc43ad428603539a2051940c09b191825f66203d,Others,2024-01-10 22:37:45," add is_grad_enabled check in runtime_wrapper before running with torch.no_grad. We observed that `with torch.no_grad()` in runtime_wrapper introduced ~10% (0.06ms->0.066ms) inference performance regression on lennard_jones on cpu. For inference tasks in benchmark, grad has been disabled, but in the current runtime_wrapper, no_grad is set again and its time is counted into the running time. Therefore, we add `is_grad_enabled` check in runtime_wrapper before running with torch.no_grad. If grad has been disabled, there is no need to set no_grad. ",1,Missing,Performance Degradation,add,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/f6639359357452de8bfc691430396ded98ea399c,Boundary Value,2024-01-07 23:55:35," [MPS] Fix boundary checks in generateKernelOffsets.`TORCH_CHECK(i<UINT32_MAX)` is always false, it should be `TORCH_CHECK(iterShape[i] < UINT32_MAX)`",1,Improper,Program Crash,update,Macro Checker,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/02e2158e754bafda46e663052c838aeb6ab6b560,Boundary Value,2023-12-28 17:09:03, Fix for out of bounds read in mobile interpreter INTERFACE_CALL opcode handler. The INTERFACE_CALL opcode for the mobile TorchScript interpreter contained an out of bounds read issue leading to memory corruption. This change adds an explicit check that the number of inputs passed to the format method called when handling the INTERFACE_CALL opcode is a valid and within bounds of the stack.,1,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/66b04e3cb707d30c4698b269c83cb6221848f17a,Null Value,2023-12-14 18:40:54,"nullptr profiling name. Sometimes profiling name can be a nullptr, which throws on conversion to std::string. This adds a check.",1,Missing,Program Crash,add,Ternary Operatory,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/1becd2c314f45bded8d3fbec91d785e7190b4afe,Device Availability,2023-12-12 17:20:20,"Align checks in _use_cudnn_ctc_loss with those in _cudnn_ctc_loss.This PR is intended to fix the following problem: When using `CTCLoss`, there is a cudnn path gated by a call to [`_use_cudnn_ctc_loss`] which checks some conditions. However, there are more checks in `_cudnn_ctc_loss`.  some of which are not present in `_use_cudnn_ctc_loss` (e.g. the check that `targets` is on CPU which will cause a RuntimeError after dispatching to `_cudnn_ctc_loss`). Instead, these checks should be in `_use_cudnn_ctc_loss` so that the normal `_ctc_loss` path will be used if the checks are not met)",1,Insufficient,Others,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/7553c495147f3e21a1e27d392d277906a47768e7,Edge Cases,2023-12-12 13:02:05,"Fix distributed debug w/ non-equal split. In collectives, it's possible to have non-equal split that has a different implementation and the output tensor size will be different.  However, TORCH_DISTRIBUTED_DEBUG=DETAIL will assume the output tensor size is the same and does the check and will fail the job if they don't. Ideally we should check the input size across ranks and make sure they're the same. Maybe for next diff.",1,Missing,Program Crash,add,If Checker,Shape Mismatch Between Tensors,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/99f06c0cc2a907d8fbf613768356838548f1f8c0,Error Message,2023-12-11 16:21:10,update errors to be more descriptive we call `_check_single_tensor` and `_check_tensor_list` as validation but don't print out the param types that were invalid,1,Misleading,Confusing Error Message,update,If Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/490f2d75700a806bdc6110e881e78493cde163e3,Device Availability,2023-12-05 23:44:49,"Skip privateuse1's checkZeroPoints. We want to use ``quantize_per_channel`` to create a quantized tensor, but we found that ``checkZeroPoints`` for ``privateuse1`` backend failed. ``quantize_tensor_per_channel_affine`` will ``checkZeroPoints`` for all backends expect ``CUDA``:  However, our ``privateuse1`` backend will get a segmentation error if we try to cast our data to int64_t in ``checkZeroPoints``: So if we can skip ``privateuse1``'s ``checkZeroPoints`` and check this item in the actual device function? What do you think?",1,Insufficient,Program Crash,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/c1e51fcbfc70c089276530ee64fb626e3f7f4f2b,Device Type,2023-11-29 23:43:46,Relax tolerance for cuda accuracy check,1,Missing,Unexpected Behavior,add,If Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/a076a74f1118da171cf70d00d1de4abbe27cf85d,Device Availability,2023-11-29 0:59:35, Add xpu device in assertion for nested tensor creation,1,Insufficient,Program Crash,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/4d07428edee863e7f5920f0672957a9711a9f0b5,Boundary Value,2023-11-21 20:05:42,Fix for out of bounds read in mobile interpreter FORMAT opcode handler. Summary: The FORMAT opcode for the mobile TorchScript interpreter contained an out of bounds read issue leading to memory corruption. This change adds an explicit check that the number of inputs passed to the format method called when handling the FORMAT opcode is a valid and within bounds of the stack.,1,Missing,Program Crash,add,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/fb25fd6f865ed0532caf710ca130b6cc23a772a8,Others,2023-11-20 20:24:21,Replaced neg dim normalization with assert in helper. I think we can still leave the check for negative shard dimension in `compute_local_shape_and_global_offset` and replace the normalization logic with an assert. This should provide us a stack trace to see which user-facing API did not normalize the dim as expected.,1,Improper,Program Crash,replace,Assertion Statement,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/d01f8b291d437a37ec8809a18c1bb2ebfa825285,Computation Graph,2023-11-08 0:27:15,Fix visualize_overlap for Inductor comm reordering. The following assumptions are not always valid and need checking: 1. `snode.node` exists 2. `snode.node.layout.size` exists 3. `snode.node.layout.stride` exists 4. `snode.node.name` exists Also there is no guarantee that there won't be two collectives running at the same time. But it's hard to visualize the overlap in that case. So disable the visualization for that case for now.,1,Missing,Unexpected Behavior,add,If Checker,Valid Computation Graph,Computation Graph,,,
pytorch,https://github.com/pytorch/pytorch/commit/93cea394dee1315c7a85ead7bb7af21363157c4f,Device Version,2023-11-07 21:51:18,Currently we compare `CUDA_INCLUDE_DIRS` and expect exact equality with `CUDAToolkit_INCLUDE_DIR` however this fails in the presense of symbolic links or for split installs where there are multiple include paths.,3,Improper,Unexpected Behavior,update,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/8198474eb763c8d526ede3418211479c2f4cbd30,Computation Graph,2023-11-02 15:31:32,"Previous to this PR, we only checked TorchScript nodes for scope compatibility, skipping their parent's scope reference check.",1,Missing,Unexpected Behavior,add,Checker API,Valid Computation Graph,Computation Graph,,,
pytorch,https://github.com/pytorch/pytorch/commit/e574a8ab55b2ac4266211d30d98d32d8b849ea86,Type Checking,2023-10-24 21:18:32, Add sanity checks to ensure no double-wrapping of `FakeTensor`s produced by the current graph,1,Missing,Unexpected Behavior,add,Type Checking API,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/097defb1608827d82b18b27adeec0a98b72a9281,Device Availability,2023-10-11 23:37:18,only check when world size > num_devices per host,1,Insufficient,Program Crash,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/07f0f383fa23e63eca164036ab58ab983e9437eb,Type Checking,2023-10-11 22:14:38,"update tensor-like to check instance for torch function impl. tensor like should check the instance for a torch function impl, not the type",1,Unnecessary,Unexpected Behavior,remove,If Checker,Valid Tensor Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/52e76a305677dfaf26cd5d59bd1aa239375f833c,Edge Cases,2023-10-11 17:26:41,"fix ShardedTensor.gather when shard is empty. current ShardedTensor.gather is not working as expectation when the shard is empty on any rank The root cause is identified that when a sharded tensor has no placement on a specific rank, the metadata doesn't include that rank's placement which introduces KeyError in :```shard_offset = shard_placement[shard. Metadata][1]``` It's fixed by adding an empty tensor check.",1,Missing,Unexpected Behavior,add,If Checker,Tensor is Not Empty,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/468a73f0e3527c52495c864c7d48dc26684f6c0b,Type Checking,2023-10-09 21:46:33, Support Numpy ints in the torch.nn.functional.interpolate dtype check. This PR updates the check to also include numpy integers,1,Missing,Others,add,If Checker,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/6b4c686b9a33a1503a4a4133f9067dd31e0822f7,Device Version,2023-10-08 0:06:44,"Forward fix a performance regression caused by #110510. When a model is run once, all those kernel pointers are initialized and removing the if-nullptr check will cause those loadKernel be unnecessarily executed again when we rerun the foward function.",2,Improper,Performance Degradation,update,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/a8653f35de02c7fb038e3c184dda6e67a12a39e2,Device Availability,2023-10-04 22:42:57,Perf win by check which device tensors are on,1,Missing,Performance Degradation,add,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/fd6c993eeaacda7ef6b83f59ad3474aed0d52eaf,Device Availability,2023-10-02 13:34:31,Add missing CUDA error check,1,Missing,Performance Degradation,add,Macro Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/175ccfc4c8443bcc65c87d9c942272d3ebf16b0b,Null Value,2023-09-21 19:19:17,flatbuffer module fields are not initialized,1,Insufficient,Program Crash,extend,Macro Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/871b5caae76185cff141c522b3133e7543c8dabf,Device Availability,2023-09-18 20:10:51,"Fix hpu deserialization bug. fix hpu deserialization bug. It should check hpu model if and only if location start with hpu. Otherwise, it always raise an AssertError if hpu is not imported. This break the serialization/desirialization functionality abourt other third-party like IPEX. only assert hpu model when start with hpu",1,Improper,Unexpected Behavior,relocate,Assertion Statement,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/55c19a3c6d38a49fe34e008c4c566445c43810f0,Type Checking,2023-09-16 6:02:56,"Increase multiplier to 3 for Inductor AMP benchmark correctness check. we find some of the models have failed the benchmark's correctness check. However, the end-to-end model's accuracy. when comparing AMP with FP32 is within a difference of less than 0.1%. Thus, it's possible that the correctness check failures for these models are false alarms. We use multiplier of 3 instead of 2 in this PR to avoid these false alarms.",1,Missing,Unexpected Behavior,add,If Checker,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/4ee179c9528c8c6aae17a01f2b0d7e8235219219,Edge Cases,2023-09-15 20:07:19,"Fix ConstantVariable init method if NumPy is missing. By adding `np is not None` check before `isinstance(value, np.number)`",1,Insufficient,Unexpected Behavior,extend,If Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/62732bdcdb8b6112e01366d4ad1c2a50e61da1ed,Computation Graph,2023-09-13 21:40:49,quick fix for invalid nodes. Summary: As title.Need to check whether node is valid before fusion,1,Insufficient,Unexpected Behavior,extend,Boolean Expression,Valid Computation Graph,Computation Graph,,,
pytorch,https://github.com/pytorch/pytorch/commit/d471eaeb1d2fbc7efcde6408d7d1e513b969af25,Null Value,2023-09-05 20:02:42,fix inline_container.cc inplace loading,1,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/eb8659fe81f3d4b061674bf149a6805cd292db8d,Edge Cases,2023-08-31 16:21:20,pass inference accuracy check for detectron2_fcos_r_50_fpn. We need a higher tolerance to pass the inference accuracy check for detectron2_fcos_r_50_fpn .,1,Missing,Numerical Error,add,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/e31038d574712d383fdc4c2f1bb63fc82f256ed0,Type Checking,2023-08-30 10:55:18,"Check results dtype in index_out. This logic exists for index_put and index_add, but for some reason not for `index.out` Skip testing, as this function is not technically exposed on the Python level.",1,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/48a49b2683ffa21eb1b472e503c129c043c18f87,Error Message,2023-07-10 15:00:47,"use more informative error message for ConstandPad2d/3d.  the current error message for `torch.nn.ConstantPad2d` and `torch.nn.ConstantPad3d` is misleading, this PR fixes the problem.",2,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/db1ac4e29b0f557711190c8d49d4afb5da1844e8,Backend Type,2023-07-06 5:52:48,"Summary: We should explicitly check for the gloo backend instead of relying on the shard's device, because user might pass a GPU tensor as input and a process group gloo as the pg, and expect that should work.",1,Insufficient,Unexpected Behavior,extend,If Checker,Available Backend,Backend,,,
pytorch,https://github.com/pytorch/pytorch/commit/a5ca445f7953711bc90c111c3cad2ec87f02e74a,Null Value,2023-06-30 18:53:49,"Check for corrupted ivalues. The error occurs because the `ivalues` field of flatbuffer module can be null, so the corresponding check must be inserted.",,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/a69f427f957a37eee9c1dd5df681f30ab38ed3e4,Type Checking,2023-06-26 18:01:27,aten: Ensure dim is size_t,,Improper,Others,update,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/b3ace213f240dc0f0f2a738f825f46e0d0dffca4,Edge Cases,2023-06-23 20:49:14,The error occurs because there is not check in `deserialize_source` that `text_table_` size can be less than `fnameIndex`. To prevent the error the corresponding check must be located.,,Missing,Program Crash,add,Macro Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/8b37821813b60a3ce2ae92e7a06057183578a450,Device Type,2023-06-20 17:01:57,"if we want to use dp on other device ranther than ""cuda"", this balance  check will raise error, so I make the balance check only effective for `cuda`",,Insufficient,Others,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/b287cb816c1ac52165920a121c98643c08d31ff7,Boundary Value,2023-06-15 23:56:39, inductor: make the vec_transpose's tiling stride doesn't depend on out_idx and tiling_idex. ,,Insufficient,Unexpected Behavior,extend,Boolean Expression,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/8340762211e3b55caa178bac748bd902249f6fc0,Type Checking,2023-06-13 22:13:05,Update lr_scheduler.py to check the type of eta_min. Add float assertion to `eta_min` parameter in `CosineAnnealingWarmRestarts`.,,Missing,Unexpected Behavior,add,Type Checking API,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/6cc0f1c20c2f87a6c7b0e4abd5419e5007920999,Null Value,2023-06-13 19:54:45,Checking for nullptr in get_model_bytecode_version . One-liner commit to check that the ptr is not null. Just had `test_jit` that had a segfault there.,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/2dafa70d61a1a5af849ab79c7aed4c84686337a0,Type Checking,2023-06-07 10:40:12,Add a little more error checking to minifier,,Missing,Others,add,Type Checking API,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/3ef4d697df5bfdbd27dfc7a79c0679da2b87e3af,Backend Type,2023-05-30 15:22:37,"default backend need to check for nccl availability. As titled, we can only initialize nccl backend when NCCL is available",1,Missing,Unexpected Behavior,add,If Checker,Available Backend,Backend,,,
pytorch,https://github.com/pytorch/pytorch/commit/999bae0f54108ffc5b7cf2524a02a83901554b16,Edge Cases,2023-05-30 1:07:59,Add padding check for use_nnpack. nnp_convolution_output doesn't support the case of input padding > = kernel_size.,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/faa7eb81c634492b70fcc0327622bb0aa812cacd,Error Message,2023-05-24 4:36:43,"change error_message for XPU Autocast data type check. XPU autocast supports bf16 and fp16 data types, we are going to change the error_message for that.",1,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/bdb3fb49bc7a73cbcc5c865dda8be32888deb584,Error Message,2023-05-22 14:37:05,Fix the check message of unsupported collectives ops.  Fix the check message of unsupported collectives ops.,1,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/bde7b81f34925491fbcbb9e355697eb594e36923,Null Value,2023-05-08 17:56:44,"Back out ""[PyTorch] Don't do extra numel() check in TensorImpl::data()",,Improper,Program Crash,update,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/97245a06e14a5b87a0bca1908d7200603aff2c8c,Edge Cases,2023-05-04 11:06:27,"TORCH_INTERNAL_ASSERT_DEBUG_ONLY won't be enabled during non-debug builds, but for 1 dimension Tensors the check is cheap enough and not catching this can slow down development a lot.",,Improper,Program Crash,replace,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/794e3971ab90611b4a63166589368a737843c8bc,Boundary Value,2023-05-02 14:50:31,Add size check before calling stack_.at(dict_pos) in unpickler.cpp,,Missing,Program Crash,add,Macro Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/7684044b713761abd4f51225dc5d83ce5869562a,Edge Cases,2023-04-28 20:26:35,Add size check before calling .back() in rpc/script_call.cpp,,Missing,Program Crash,add,Macro Checker,Valid Integer Argument,Integer Variable,,,
pytorch,https://github.com/pytorch/pytorch/commit/8ee59280d78a4fefc4de0da04b287e067c28de0d,Edge Cases,2023-04-21 2:40:09,Bug - check config for dynamic,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/ae55619a2bb73ebcdc80b02a6ccd72275a9ce23e,Type Checking,2023-04-14 12:57:35,Add check for same dtype in tensordot implementation,,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/a3701b674046bcefb5927a6643364b186f77dbcf,Device Availability,2023-04-10 11:56:38,"fix backward bug for custom device. In the backward on some device , it may get an error to get device index because of exchange a new thread. So just set_device and check the device index in `setDevice`  func may be better for some many kinds of devices. For CUDA, the device index check is also included in `setDevice`  func",1,Unnecessary,Unexpected Behavior,remove,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/f386312ec936a94bfb1abe44acdd61d498f4272b,Null Value,2023-04-03 20:59:52,"Don't do extra numel() check in TensorImpl::data(). `is_empty()` checks `numel() == 0`, but we don't need to access `numel_` at all (or the policy that `numel()` checks) in our happy path -- we just need the data pointer from `storage_`. Let's do the check we need to do using only the data we strictly need, rather than adding instructions loading other pieces of data.",1,Improper,Performance Degradation,update,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/35be57970143236d74661f2415d66d496aab5476,Edge Cases,2023-03-29 19:08:03,"Refactor TENSOR_MATCH guards to check dim (for NT support). Tweaks the TENSOR_MATCH guard logic to avoid saving sizes / strides for the case of dynamic shapes. Instead, the dim() is stored, which is enough for both dense tensors and NTs.",,Improper,Program Crash,update,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/bbc7c79b20e67da450dd9b7de70cc6b68e656714,Device Type,2023-03-27 14:57:27,add device checks for sparse csr,,Missing,Unexpected Behavior,add,Macro Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/4ab1588d9919bc1a62219a5c2393e0784ddaae70,Error Message,2023-03-22 4:42:48,"Enhance error message for dependency check, If python development library is missing when building pytorch from source cmake will raise the error like: CMake Error at cmake/Dependencies.cmake:1079 (if): if given arguments: ""VERSION_LESS"" ""3""  Unknown arguments specified ```it's quite a misleading information that user would consider it's a syntax error or cmake version problem. This PR add a check to ensure `PYTHONLIBS_VERSION_STRING` exist before using.",1,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/45296f87ec865a7a500a6fd98353035c040d0cb7,Edge Cases,2023-03-20 23:19:31,"Prior to this change ROCm was not exiting check_cuda, causing an exception at packaging.version.parse(torch.version.cuda),",1,Insufficient,Program Crash,extend,If Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/cf732053e4f6b93b0a93006613552cd97f415b80,Boundary Value,2023-03-16 22:01:43," Today if we're accessing out of bound embedding rows, it'll either go through or throw IMA. This is not ideal - adding bound checks. This will probably slow things down - need to benchmark it.",,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/c69b3b8d4f484cf537d98974a3a4143b77edf3c8,Device Availability,2023-03-13 16:04:12,Autograd engine use current device only. In this PR a check upon CUDA devices in device registry is added such that threads set the same CUDA device.,,Insufficient,Unexpected Behavior,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/a5aceba61fc290236af955e2c4fff4513476c9ff,Error Message,2023-03-07 14:16:27, [static-runtime] a pass through checks throwing exceptions Summary: increasing verbosity where possible,1,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/1359d16fe8ca0cb7041674c455f2f99a9636fec0,Execution Mode,2023-03-05 9:53:02,Further tighten the checking of two eager runs. Summary: To catch nondeterminism in eager if there is any.,1,Missing,Unexpected Behavior,add,If Checker,Tensor is Executed in Eager Mode,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/a6a433aecd0da3ac3c8d49cb36091623f1b5ec9e,Edge Cases,2023-02-13 16:00:00,Add stack emptiness checks inside interpreter.cpp,,Missing,Program Crash,add,Macro Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/4e1bd4abe7691f460cb021e5b314168caa42ef92,Type Checking,2023-02-09 10:22:02,"Fix scalar type resolution for optional tenso. When TorchScript Value has an optional tensor, `dtype()` or `scalarType()` is not available and raise (by design).  The symbolic `_op_with_optional_float_cast` must check whether the tensor is otpional or not before calling the scalar type resolution API. This PR fixes that",1,Missing,Others,update,type Checking API,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/f77f88fbc7511b405c4e493bdd74634b633f63d1,Others,2023-02-01 3:12:39,"X86 qengine always uses fbgemm kernels on OS other than Linux. X86 quantization backend (qengine) with oneDNN kernels has not been validated on OS other than Linux. So, let it fall back to fbgemm if OS is not Linux. This makes sure the behavior is the same on Windows/Mac as the previous default fbgemm qengine on x86 CPUs.",,Missing,Program Crash,add,If Checker,Valid Tensor Quantization,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/63e47c68a692c70bc64c49d687f85f7f5cd02ce3,Edge Cases,2023-01-25 15:36:44," remove checks from embedding bag impl. These checks incur an H2D sync on every embedding bag forward. Also, the equivalent python code for embedding_bag does not have them",,Unnecessary,Unexpected Behavior,remove,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/bdbd3ed312e0fc81e75302239ea78b3445fe95e7,Computation Graph,2023-01-18 19:59:33,"Although `len(compiler.captured_graphs)` is 2, no error was thrown during the compilation. This observation conflicts with `nopython=True`. After some digging, I found a check is missed before making graph break. This PR adds it.",,Insufficient,Program Crash,extend,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/40d6f2a02027023216607adb892d3b9c7493904c,Type Checking,2023-01-17 18:14:21,Update sdp_utils to check gradmode and subclassed tensors. Fix up the grad check test to check for subclassed tensors and gradmode,,Insufficient,Unexpected Behavior,extend,Type Checking API,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/aab55d6d0d7b958e32cfdbb69794e107cfceb6bc,Computation Graph,2023-01-05 18:58:45,"Remove all the dequant nodes when the ref module has multi input args. When converting a ref module into a quant module, `_lower_static_weighted_ref_module` pass assumes the `ref_node` only has 1 input node, and only remove the first `dequant` node. We add a check in this PR to ensure this is the case for `_lower_static_weighted_ref_module` pass.",1,Missing,Unexpected Behavior,add,Assertion Statement,Valid Computation Graph,Computation Graph,,,
pytorch,https://github.com/pytorch/pytorch/commit/6bf0e3b697ce688bc8325440dea3b51fea571c3d,Backend Type,2023-01-03 17:38:29,"Check for BackendCompilerFailed on CI. random triton failure on CI, but we need to check against the BackendCompilerFailed exception type.",2,Missing,Others,extend,If Checker,Available Backend,Backend,,,
pytorch,https://github.com/pytorch/pytorch/commit/7e9bf2ed860b8b60d252eead4cc457c3fe5f1667,Computation Graph,2022-12-19 18:43:28,"Although `len(compiler.captured_graphs)` is 2, no error was thrown during the compilation. This observation conflicts with `nopython=True`. After some digging, I found a check is missed before making graph break. This PR adds it.",,Insufficient,Program Crash,extend,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/9e314bd8224f93b4ba1f9e4c065150e47a2de2cc,Type Checking,2022-12-06 13:17:20,"handle the case where output of op is Optional[Tensor]. some op might have Optional[Tensor] returns where it return None (i.e. native_layer_norm_backward), it's a mismatch between C++ aten op signature and python None, but we need to handle it in the python side",1,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/2597d5d72272d196b4cb5442ffc8cde376d1f785,Type Checking,2022-12-05 22:07:53," TorchDynamo: always convert flexiblelayout to be FixedLayout when given a stride_order. For convolution, we always call **require_stride_order** to convert the input to the target stride order,  if the original input's layout is flexiblelayout, there always have a memory copy because the **is_stride_order_storage_and_layout** only checks the init stride order,  I think for flexiblelayout, means it's layout can be changed, if the user gives a stride order, I think we always need to convert the flexiblelayout to be FixedLayout using given strider order.",,Insufficient,Performance Degradation,extend,Type Checking API,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/6f5945e4bb1258d39a2878a08a910fcc8f659d5e,Device Availability,2022-12-01 17:01:41,"triton supports devices < 7.0, not 6.0. triton is still buggy with Pascal devices, so make the error checker reflect that. Also, this < 6.0 never worked, as the `has_triton` definition in utils.py was checking >= 7.0.",1,Improper,Unexpected Behavior,update,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/5b51ca6808191e9f3dcea1d43fa731488cc688bb,Device Version,2022-11-22 22:07:22,Update CUDA compiler matrix. Switch GCC/Clang max versions to be exclusive as the `include/crt/host_config.h` checks the major version only for the upper bound. This allows to be less restrictive and match the checks in the aforementioned header. Also update the versions using that header in the CUDA SDKs.,,Improper,Unexpected Behavior,update,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/e856a4d66bead8997a83f8714547c09fcbcdc263,Device Version,2022-11-17 15:10:52, Add an env var to skip cudnn version compatibility check. skip the check by setting `PYTORCH_SKIP_CUDNN_COMPATIBILITY_CHECK=1`,,Missing,Unexpected Behavior,add,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/d8466964b348b6172317f70b8e52de02402bad54,Edge Cases,2022-11-15 15:35:51,Add range check to multi margin loss target ,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/ee91c328da5739ce03b3127cd7c542ce505212b8,Device Type,2022-11-11 7:19:31,Fix cuda/cpu check on NoneType ,1,Improper,Others,update,If Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/b90db4a78f8d760377a81a5a64d03ab4b67599de,Type Checking,2022-10-20 1:05:56,Fix type checking to accept both Iter and Map DataPipe,1,Improper,Unexpected Behavior,update,Type Checking API,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/232fbd90ff6d93362120d955befeeb297179ddad,Device Type,2022-10-19 3:13:38,"For aten.convolution CPU path, the bias always can be fused, so this PR adds a device check: if inputs' device is CPU, we will fuse it for a good performance.",,Missing,Unexpected Behavior,add,If Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/4839f73f329b38819e6f69a8662d61dc36558e52,Others,2022-10-13 13:54:28,"Fix incorrect tensor storage check. These fixes were run through the DirectML test suite, and confirm the check is now working correctly.",2,Improper,Program Crash,update,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/7ddf167ba5db277e02f983a6bde2bc3f5fbe1caa,Edge Cases,2022-09-30 14:30:06,Move the asserts in shape functions upsample_nearest_2d op. The assert check are moved to top and the function now returns out. This is needed by the downstream torch-mlir project to correctly determine the output type.,,Missing,Unexpected Behavior,add,If Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/61b9d8fccd3361f21e1f3548c2a9538b62cc7525,Null Value,2022-08-26 16:03:24,"It is apparently undefined behavior to do pointer arithmetic on nullptr. In the case of AppendOnlyList, `next_` will only be null if `end_` is also null and thus the `memcpy` path will only be triggered if `n == 0`. Nonetheless, it is U to `memcpy(0, 0, 0)`. The extra null check is in a `C10_LIKELY` block so the extra cost should be negligible, and indeed after dusting off the component microbenchmarks there's no observable difference.",,Improper,Unexpected Behavior,update,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/63cbdc92a750a667ffdcfbdac563d02db6fd9559,Type Checking,2022-08-25 4:28:40,switching the exact check to isinstance check. Simplifying a type check if an object is a SymIntNode in `is_symint_node`,,Improper,Others,update,Type Checking API,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/6592259ea52f45e1fc9a633ccb5b154ba5099334,Device Availability,2022-08-01 5:28:44,"As per torch.jit.load documentation, all previously saved modules, irrespective of their device, are first loaded onto CPU, and then are moved to the devices they were saved from. So far, supported devices included CPU and CUDA only. To enable torch.jit.load for HPU, additional check for HPU is introduced.",,Insufficient,Unexpected Behavior,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/577e90ae9bf257040acb68da3626d9a64d07bf7a,Error Message,2022-06-23 5:04:34, Improve error message for missing ops. The current error message is ill formed,1,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/157d478a30f27fd9d866c1235841721a559c8d0b,Edge Cases,2022-06-05 19:10:55,Fix omission of shape in size check in index. ,1,Improper,Program Crash,update,Boolean Expression,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/1f819ee965894b8332cb364a67c91855c91c9dcc,Others,2022-06-03 16:14:32,"Add check for no grad in transformer encoder nestedtensor conversion.  Before, we allowed inputs with grad to be converted to NestedTensors. Autograd attempts to find the size of the NestedTensor, but NestedTensor throws an exception for its size function. This causes all calls to nn.TransformerEncoder with grad enabled to fail. Fix: we add a check for no grad in transformer encoder so we do not convert tensor with grad to nestedtensor.",1,Missing,Unexpected Behavior,add,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/cc6a51c9f3ee97a06ff9c0b84477e88e33e31137,Edge Cases,2022-06-02 17:12:14,added shape checking to WeightedRandomSampler,,Missing,Others,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/b6920405da340bbd3397b80bf16d9c360b0c48d2,Type Checking,2022-05-25 22:27:33,reorder checks to shave 1 us off no-op dispatch time ,,Improper,Performance Degradation,relocate,If Checker,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/fe6aa0844466e5dd2669092eac5edde153108b28,Type Checking,2022-05-13 16:49:40,Don't delegate to `operator=` for construction. Catch hypothetical addition of a new Scalar type via debug assertion rather than checking in prod.,,Improper,Unexpected Behavior,replace,Macro Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/29b702144bf5bb96dfd8fcbd04b6562a27ca5385,Device Type,2022-05-07 6:35:29, Fix issue in s_addmm_out_sparse_dense_cpu only supporting CUDA device checking. ## Motivation The at::native::s_addmm_out_sparse_dense_cpu only supports the CPU tensors. But it only checks whether the tensor is on CUDA device which is not enough. ## Solution Change the tensor device type checkging from is_cuda to !is_cpu to protect other backends than the CUDA.,1,Improper,Unexpected Behavior,update,Macro Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/9bcb4de16878073896d8743fbd70d5abe28b595a,Edge Cases,2022-05-03 7:50:36,check parameter k and l ,,Insufficient,Program Crash,extend,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/75be4f9cdb503d6eff189b2bc5c05d96bff66653,Others,2022-04-26 13:52:45," check tensor has storage before refer to tensor data ptr. In the exporter dedupe initializers passes, check the tensor has storage before reference to tensor's data_ptr, otherwise it will result in a crash.",1,Insufficient,Program Crash,extend,Checker API,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/f02b7a9c36dd6182da694bc47a5c345285dfd951,Edge Cases,2022-04-26 9:07:56,"don't error when unused fill value is zero. In the python version of `F.pad`, checking that the fill value was left as default was done by comparing against zero. So if someone does explicitly pass in a zero-value, then this `TORCH_CHECK` was an accidental BC-break.",,Improper,Program Crash,update,Macro Checker,Tensor is Not Empty,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/a9deda5469a6ef73692a9dd796cc4eeba4436d6c,Device Type,2022-04-25 20:56:10,The at::native::_validate_sparse_coo_tensor_args only supports checking the indices on CUDA device and CPU device. To extend the function to support more device type.,1,Improper,Program Crash,update,If Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/bc371a2cd03ce573f3ad4f7be141364136028905,Edge Cases,2022-04-12 20:33:49,"Add additional checks when tracing back during maybe share output observer function. Summary: Currently in `maybe_make_input_output_share_observers`  we trace back from a node to find the activation_post_process of the input node, we have internal use case which would error out during tracing back, this PR is adding a guard during this process to return False early when the node doesn't have any input",,Missing,Others,add,If Checker,Valid Integer Argument,Computation Graph,,,
pytorch,https://github.com/pytorch/pytorch/commit/37dea0454dd310cfe443859f717862657df6b753,Computation Graph,2022-04-07 23:56:03,add checking for number of args checking observer in same graph,1,Insufficient,Unexpected Behavior,add,If Checker,Valid Computation Graph,Computation Graph,,,
pytorch,https://github.com/pytorch/pytorch/commit/1c5a8125798392f8d7c57e88735f43a14ae0beca,Type Checking,2022-03-26 10:49:11,Better type checking in disable_torch_function/dispatch ,,Improper,Unexpected Behavior,replace,Type Checking API,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/f810d96806d0e767aeca9fe9cf50e0bdcaab7d52,Edge Cases,2022-03-14 16:29:58,"emove redundant index check for index_select_out_cpu_dim1_. For  **index_select_out_cpu_dim1_**, there has a redundant idex check, **check_indexarray_range** has checked  **the index>=0 and  index < slect_dim**, we don't need re-check it at copy step.",,Unnecessary,Program Crash,remove,If Checker,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/012829eb3657aff2d58cead0bd166089c6e90c7f,Device Type,2022-03-09 11:44:56,"Do not crash when target device is unsupported by fuser. The `canFuseOnDevice` function now crashes when the device is not covered (i.e., CPU, GPU, XPU). However, now we have some devices, such as XLA and Lazy, that could perform fusion by themselves. This checker then prevents these devices from working on the models partially implemented in `jit.script`. This PR proposes to remove this checker and simply return false for all uncovered cases.",,Unnecessary,Program Crash,remove,Macro Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/e9c1ccee2247a7746fde202067a7d47b72809968,Edge Cases,2022-03-01 18:28:14,Bug fix: allow std 0 in the meta definition of normal_. All other `normal` variants allow 0.  Looks like a mistake made while copying the check. ,2,Improper,Others,update,Macro Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/be253b8ee8a104997773d11ed28928a48193217d,Edge Cases,2022-03-01 1:31:52,The existing check isn't safe for 32-bit `size_t` because the max 64-bit int will overflow.,,Improper,Others,update,Assertion Statement,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/cafd0f33042f5344a27ccde33b352eab676a0bdd,Boundary Value,2022-02-24 14:39:32,"Fix array index checking in mobile interpreter. Stop using non-portable out-of-range indexing in mobile interpreter, also change code types indexing to use vector.at() to catch out-of-range bugs earlier.",1,Improper,Program Crash,update,Checker API,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/bdc8b3f3e828ca7202879baa379fda6df5b078d2,Edge Cases,2022-02-18 20:33:51,"Re-route arithmetic ops to scalar versions when second arg is zero-dim. When arithmetic ops are invoked from torchscript the scalar argument will sometimes be wrapped in a zero-dimensional tensor, which will cause the Vulkan implementation to complain as all input tensors are expected to have the same number of channels. The solution is to have the Tensor implementations of the op check if the second argument is zero-dimensional and re-route it to the Scalar implementation if that's the case.",2,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/41ad221751e57c2d2ccc82b431f56d6ed62e1741,Edge Cases,2022-02-16 13:36:21,MHA: fix contiguity assumption in transform_bias_rescale_qkv. This code path incorrectly assumed input tensors were contiguous. Now we check that.,,Missing,Unexpected Behavior,add,Macro Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/678c08bb55eef0c2e707a17d0cd6e50f5b9bd427,Backend Type,2022-02-11 10:59:13,"_ProcessGroupWrapper check needs to be gated on Gloo availability, this fails when gloo is not avail_ProcessGroupWrapper check needs to be gated on Gloo availability, this fails when gloo is not avail.",,Missing,Unexpected Behavior,add,If Checker,Available Backend,Backend,,,
pytorch,https://github.com/pytorch/pytorch/commit/5b7c72101ca8e9d4edba1d16b6121ad900ca3936,Tensor Quantization,2022-02-03 10:36:15,Removed check for is_quantized in dequantize_cpu_or_cuda. This particular PR isn't dispatcher related but does remove the extraneous torch check for a quant tensor since the dispatcher already handles a quantized backend for this particular function,,Unnecessary,Performance Degradation,remove,Macro Checker,Valid Tensor Quantization,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/d23231fd8cd50e4eb657eb7c3cf102475634f9c6,Edge Cases,2022-02-02 19:41:03,"Fix upgrader codegen when constant list is 0. Summary: When the constant list is empty, previous codegen will generate something like ``` std::vector<c10::IValue>({ }), // constants list, ``` However it will fail quick-check, because it includes trailing spaces. This pr will generate the following instead. ``` std::vector<c10::IValue>(), // constants list,",,Missing,Unexpected Behavior,add,If Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/871e240e6367f94966a3e2f9deefbfa98e314d6d,Error Message,2022-01-31 15:50:42,Improved error message for interpolation. Improved error message for CUDA interpolation with antialiasing,,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/027c0d7f8e37e583c02b372df5331d73793c06b1,Device Type,2022-01-26 21:28:19,"fixed compilations on xla tensor prin. This is done to avoid compilations during tensor printing. Torch performs some tensor operations like slicing to make the tensor readable. These operations result in compilations. Hence to avoid the compilations, copying the tensor to cpu before printing. Returning from this function would have resulted in 63 compiles, since PDB prints the value of the return output. In this case it is a xla tensor. Now with the current change, there is no compilation.",,Missing,Unexpected Behavior,add,If Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/666ff0ae220e1a5c406b0bc5cd43283e1b18b38e,Edge Cases,2022-01-26 17:29:33,"Update _create_c10d_store to check port value. Port number is int in python, but needs to be uint16_t when called for TCPStore constructor.",,Missing,Unexpected Behavior,add,If Checker,Valid Integer Argument,Integer Variable,,,
pytorch,https://github.com/pytorch/pytorch/commit/2c9dd886afc656a8bfe5d8bbcb601ee5877cee21,Edge Cases,2021-12-14 12:55:59,Modify torch.movedim to handle scalar as no-op. Summary: `torch.movedim` directly handle the case of a scalar tensor (0-dim) in input as a no-op by returning a view of the input tensor (after all the usual checks for the other parameters),,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/442d7d72def17dba46f0b95c55c6a028428be0bc,Type Checking,2021-11-09 14:42:34,"fixed type checking errors in options.py. This PR fixes the type checking errors in torch/distributed/rpc/options.py. The variable types in 84:8 and 85:8 were  declared to have type `List`  but were sometimes assigned a value of  `None`. This caused an incompatitble variable type error. Therefore, I changed the type from `List` to `Optional[List]`. Hence, this fixes the incompatitble variable type error.",,Improper,Others,update,Type Checking API,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/152f665dee05377f7459d985d60dc1edb782d40e,Type Checking,2021-11-01 19:53:54,Inserted check for PyObject_IsInstance in THPVariableCheck. Summary: Inserted check for the return of PyObject_IsInstance to capture the case in which it raises an exception and return -1. When this happen THPVariable_Check now throws a python_error to signal the exception.,,Missing,Others,add,If Checker,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/45d5b3248b430aca70111316accd165954464589,Edge Cases,2021-11-01 17:45:33,"Fixed C++ BatchNorm pretty_print() with optional momentum. Summary : Inserted a check for the momentum and print  ""None"" in case is not defined.",,Missing,Program Crash,add,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/df475aa1dc4310abc273cf26b14b6ac1cdb7dfa4,Type Checking,2021-10-05 10:59:56,"Update Vulkan runner in benchmark binary to handle non-tensor inputs. Some models may take in a list of tensors as inputs, thus the bundled inputs will contain `IValues` that are of the type `c10::List`. For Vulkan models, every tensor in the `IValue` list has to be converted to a vulkan tensor first, and this case is not currently handled by the Vulkan model wrapper in the benchmark binary. This diff introduces `IValue` type checking to the input processor of the Vulkan model wrapper, and adds support for Tensor and List types.",,Missing,Unexpected Behavior,add,type Checking API,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/c99277e177cf16736262251c7e92ea5e9ba2c5c2,Edge Cases,2021-09-13 17:24:16," handle the case in acc_ops.sum when dim == 0, differentiating it from the case when dim is None. handle the case in acc_ops.sum when dim == 0, differentiating it from the case when dim is None",,Improper,Program Crash,extend,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/c06dfd7c26102ac2436ca25609c92fa794e972ca,Device Availability,2021-08-25 13:25:34,Check input device in TRTModule. Add a check to ensure all the inputs are on cuda device.,,Missing,Unexpected Behavior,add,Assertion Statement,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/af3cbfed9510747c776418c260c5116f662c6452,Others,2021-08-18 13:41:10,"Add validation check in fx2trt interpreter. Add validation check in fx2trt for missing converter operators. If any op missing, interpreter init will report missing operators.",,Missing,Unexpected Behavior,add,If Checker,Others,Computation Graph,,,
pytorch,https://github.com/pytorch/pytorch/commit/30e1c74dc19ae2b622b46ebcdb7972c42775ac80,Device Availability,2021-08-18 9:44:10,Update cuda amp to also check xla device ,,Improper,Unexpected Behavior,update,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/18eeccc7e8cba16d71efdd2eca831983c4abde15,Type Checking,2021-08-03 19:00:55,Fix Optional type check,,Missing,Unexpected Behavior,add,Assertion Statement,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/5a20c56ebce3426397210e91693fbbeade8b46ba,Others,2021-07-12 13:09:33,"emove hasOperation() check. by removing the hasOperation() check, the Operation gets successfully materialized, and static runtime enables successfully and runs ok. Will check that the outputs match with jit interpreter",,Unnecessary,Performance Degradation,remove,Macro Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/0fc110cdd19363f2eb5de68b6eeb82dadc933be0,Device Version,2021-07-08 16:26:07,"The bug in libcuda.so that required is fixed for libcuda.so versions >= 11.4.This PR changes replay() to sync after each launch only if the process's in-use libcuda.so is < 11.4. With all the ""enhanced"" and ""forward"" compatibility promises flying around, and the fact that ""driver"" sometimes means kernel-mode driver and sometimes means user-mode driver (libcuda.so), I wasn't sure if this PR's check suffices to trigger the sync iff the in-use libcuda.so is 11.4, but Cuda people say what I wrote is reasonable.",,Missing,Unexpected Behavior,add,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/d3de37609f2f052a7efb098ab69540458ebaaa6c,Device Type,2021-06-29 17:20:17,Support fused_dropout with XPU backend. ## Motivation Enable the fused dropout optimization on XPU devices. ## Solution Add XPU device in the fused dropout acceptable checking.,,Insufficient,Unexpected Behavior,extend,Boolean Expression,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/f118d20bea9188db1bd053dd1d1af1b32479183e,Others,2021-06-28 13:40:30,Make requires grad check run only when grad mode is enabled,1,Missing,Unexpected Behavior,add,Macro Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/40a7c317bc60713528320b9786765e4ec5707982,Others,2021-06-24 21:44:41,Run BLAS F2C checks on host architecture,,Missing,Unexpected Behavior,add,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/7bf195f3608e0f28c30ffb6e2fecd74a1d4ee50a,Device Availability,2021-06-23 14:47:50,fix kernel launch check in cross kernel,,Missing,Unexpected Behavior,add,Macro Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/15dbc566c57eedbd0245e786912e94586eba0fd2,Device Availability,2021-06-16 15:19:12,Add missing cuda kernel launch check,,Missing,Unexpected Behavior,add,Macro Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/e24dee00d40d01bd83b7a08fbcf9cdd51a05b04b,Device Availability,2021-05-17 21:03:19,add kernel launch checks after each kernel launch to silence the check ,,Missing,Unexpected Behavior,add,Macro Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/e9e125475e94aabfb34ee239fadc760615eef429,Edge Cases,2021-05-12 1:07:21,Add schema check to aten::repeat and fb::fast_gather,,Missing,Unexpected Behavior,add,If Checker,Tensor is Not Empty,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/1f83d8eec25c7339bd3e2862baf9b389e6a738a4,Null Value,2021-05-11 19:30:45," [Static Runtime] Return nullptr if the number of input args doesn't match. Add checks for the number of input args and return nullptr if it doesn't match. This is intended to make Static Runtime more robust so that op schema change is less likely to break things. Imagine that a new arg is added to an op or a new overload is added that has this added arg, SR would simply ignore this added arg. If this arg has a default value, SR would run the model with the default value and give you wrong results, which can be hard to track down. ",,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/603097be18824a33069addec7b8f14ba5c3bc67a,Others,2021-03-16 0:53:05,"For OneDNN MaxPooling training, it will save indices as a workspace for backward, but for inference, indices are not necessary",1,Missing,Performance Degradation,add,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/0584fd9339af7c939ab7d955db05743ba58ff86d,Tensor Quantization,2021-03-10 19:51:36,"Only insert observers for fixed qparam ops. Fixed a condition check for fixed qparam ops, previously we were including CopyNodes as well",,Improper,Others,update,If Checker,Valid Tensor Quantization,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/43f810fa96a0d2c40387c8c84f710926d9ede3c1,Edge Cases,2021-03-02 13:58:10,Add streams boundary check to torch::cuda::scatter`. Summary: Accessing elements of `std::vector` outside of its boundaries can lead to crashes/memory corruptions,,Insufficient,Program Crash,extend,If Checker,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/13121598efc7d86cb7ae6e05322bb95c1d0f16bc,Null Value,2021-02-25 11:44:30,Bug fix to update requantization and zp parameters of input. Also sneaking in change to check for realloc failure for packed activation buffer. In dynamic quantization input's quantization scale and zero point can be different on every iterations. Thus requantization scale needs to be recomputed. Earlier bug that calculated those only at op creation time results in wrong results on subsequent runs.,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/c9548176965557a76526ba0db23ff5c9facd3e97,Error Message,2021-02-24 23:09:25,print matrix dims in torch cuda matrix multiply error.  trying to improve the error message for torch matrix multiply dimension mismatch,,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/5a962369e2b527b36a737723df1fe9c180aa2925,Backend Type,2021-02-05 12:59:12,"Check if the backend is NCCL when a DDP communication hook is registered. Some unit tests actually register a comm hook on other backends like GLOO. Example: `test_ddp_comm_hook_future_passing_cpu`. Therefore, only do the check on `register_builtin_comm_hook`. Currently DDP communication hook can only be supported on NCCL. Add a check in the registration methods.",,Improper,Unexpected Behavior,update,Macro Checker,Available Backend,Backend,,,
pytorch,https://github.com/pytorch/pytorch/commit/6420071b43dc9f2679c22952b5051b0c28f42da2,Type Checking,2021-01-12 10:55:18,"Disable complex dispatch on min/max functions. In issue #36377, min/max functions were disabled for complex inputs (via dtype checks). However, min/max kernels are still being compiled and dispatched for complex. The aforementioned dispatch has been disabled & we now rely on errors produced by dispatch macro to not run those ops on complex, instead of doing redundant dtype checks.",,Improper,Others,replace,Type Checking API,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/5a63c452e638dad8e077887ad8d2c94ff0e23917,Device Availability,2021-01-08 0:20:21,This is because there are some hard-to-detect edge cases that will throw exceptions with cudnn 8.0.5 on Nvidia A40 GPU.,,Missing,Program Crash,add,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/e3542d2c12d8aaaccf8a53873e480c20dc6b7338,Edge Cases,2020-12-11 16:57:57,"avoid unnecessary call to empty_tensor_restride in empty(). Our empty benchmark makes this call unconditionally. If MemoryFormat::Contiguous is indeed a common case (or if workloads are likely to use a consistent-ish memory format), then I'd expect checking first to be a win.",,Missing,Program Crash,add,If Checker,Tensor is Not Empty,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/1c02be1b6a0f6d02d3a0ae19c13d51a3e59a55ae,Device Type,2020-12-01 17:55:18,"In PyTorch 1.5, when running `torch.cuda.reset_peak_memory_stats()` on a machine where `torch.cuda.is_available() is False`, I would get: AssertionError: Found no NVIDIA driver on your system. Please check that you have an NVIDIA GPU and installed a driver from. With this patch, we get a more sensible:",,Insufficient,Others,extend,If Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/3611d26a25bd889627403a808ea667ac99c09904,Type Checking,2020-11-16 23:50:24,Optimize FunctionSchema::checkArg for the Tensor case. The Tensor case is one of the most common and the existing check can be made faster. This results in a ~21% improvement on DeepAndWide model and would improve other models as well.,,Missing,Performance Degradation,add,type Checking API,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/611080a118fff166c85f3200d860f3b059abac6f,Device Version,2020-11-06 13:34:25,uda 11.0.x doesn't support sm86.,2,Improper,Unexpected Behavior,update,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/dc0d68a1ee3800ed4024762d018f85256e80f5ad,Error Message,2020-11-03 16:07:21,Print out interface mismatch for prim::ModuleDictIndex. This commit augments the module interface subtyping check that is done before the emission of the `prim::ModuleDictIndex` operator so that the error message that is printed if the subtyping check fails provides more information on which methods do not match.,,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/7f125bca1cd42ebd8e07c97f1bd1682dff5cf387,Others,2020-11-02 17:00:12,Add pin_memory check in empty_strided. Add the false checking if pin_memory has been specified to `False`,1,Insufficient,Program Crash,extend,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/92ebb04f9206882e6d312a8b91318545f43a53c2,Type Checking,2020-09-24 19:26:59,added check for NumberType,,Insufficient,Unexpected Behavior,extend,If Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/6c98d904c09b69f1e7748cf3d80e2193df5fff63,Edge Cases,2020-09-10 4:18:45,"handle the case of -0.0 on tanh quantization.  this fix makes fakelowp identical to hw - mask out the floating point number with 0x7fff so we are always dealing with positive numbers - dsp implementation is correct, ice-ref suffers from this same problem",1,Improper,Numerical Error,update,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/57af1ec14594a73c8f2b73bf70c04ba7efeb6eab,Others,2020-08-17 20:08:57,"observers: use torch.all to check for valid min and max values. Using `torch.all` instead of `torch.sum` and length check. It's unclear whether the increase in perf (~5% for small inputs) is real, but should be a net benefit, especially for larger channel inputs.",1,Improper,Performance Degradation,replace,Checker API,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/5023995292f5119c447de15c20a375b7e3aa2d0b,Edge Cases,2020-08-05 18:55:46, fix output size adjustment for onnxifi_op. Summary: this breaks if we cut the net at certain int8 ops boundary.,0,Improper,Program Crash,update,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/8a644f0c136cb12cf200050c2ae6875ec487d174,Type Checking,2020-07-28 19:43:19,Summary: Sometimes first dim of X in FC is BATCH_OF_FEATURE_MAX instead of BATCH. This caused an issue in f207899183 (when first dim of X is 64 but is set to 1 in inferFC). Change the check from `!= BATCH` to `== UNKNOWN`,0,Improper,Program Crash,update,If Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/c5fdcd85c7570b654eec45b6cba7cc75b0cf8f6b,Others,2020-07-23 18:56:48,"check pruned attributes before deleting. I copyed a pruned model after deleteing the derived tensors. In order to be able to reparameter the model, we should check the existence of the tensors here.",,Insufficient,Others,extend,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/4ddf27ba48ba3313a20d3316a8929cd42436ddbc,Device Type,2020-07-14 20:17:59, [op-bench] check device attribute in user inputs. Summary: The device attribute in the op benchmark can only include 'cpu' or 'cuda'. So adding a check in this diff.,,Missing,Unexpected Behavior,add,Macro Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/402be850a8946e8967dedb3375fc6f33b379b397,Type Checking,2020-07-12 14:40:19,Adding zero point type check for per channel quantization,,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/71af538e31547e5b1bc814c9e00323a21905baf3,Edge Cases,2020-06-02 16:35:39,Updated assert to remove check on 3rd dim for MHA.  Updated assert statement to remove check on 3rd dimension (features) for keys and values in MultiheadAttention / Transform. The feature dimension for keys and values can now be of different sizes,2,Insufficient,Unexpected Behavior,extend,Assertion Statement,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/bbb5e106ad6228953df6c7f5c8916b26dc0cb457,Edge Cases,2020-05-27 10:41:02,Improve error checking of CUDALoops. Same change as was applied to CPU loops -- separate out checking of the inputs and outputs.,,Improper,Program Crash,update,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/b7882f9bd65de5a4c60f625d56186b583c1d6842,Edge Cases,2020-05-27 10:38:58,"Improve cpu/Loops.h arity asserts.  This splits the asserts into separate input/output asserts and makes the numbers precise, instead of ranges. This is an ongoing effort to improve the Loops assertion and to integrate dynamic cast checking into CPU loops.",,Improper,Others,update,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/bae895cef0c12df5f64afa155ce5462e06f0e04a,Device Type,2020-05-15 4:40:48,Added check for kHIP in ATen/native/Copy.cpp,,Missing,Unexpected Behavior,add,If Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/324dc1623e2f91892038fb1b151450a7c6529dd9,Type Checking,2020-05-11 2:15:45,"add dtype checking for gather and scatter. in the `cpu_scatter_gather_base_kernel`, it interpret a pointer as `int64_t` regardless the actual dtype. add a index dtype checking will avoid the nasty index out of bound error. As using `int64_t` is convention in ATen code (a.k.a, a limitation), no further fix is needed at the moment.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/122587dcb41427f473b7833eaf254384919e06fc,Edge Cases,2020-05-07 1:35:00,Improve error checking for large model export. Summary: * Add error message when onnx model file path is not a string. * Add error message when model size exceed 2GB when large model export is not turned on.,,Missing,Unexpected Behavior,add,Macro Checker,Valid Integer Argument,Integer Variable,,,
pytorch,https://github.com/pytorch/pytorch/commit/563bbeb8905f4cea0bc5353dc12518c61113128e,Device Version,2020-05-05 19:31:24,undefined CUDA_VERSION warning,1,Insufficient,Unexpected Behavior,extend,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/bede7d999523d02e636a8981c0dff233b67f1a62,Boundary Value,2020-04-16 11:58:03,It does not check if `kind` variable fits in array of pointer called `names`,1,Improper,Program Crash,update,Macro Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/93256617c8622760181dacf03c41cc0577ac0ea6,Error Message,2020-04-08 14:22:50,corrected messages for check of default options. Modified messages in the check of default options for the Adam optimizer.,,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/b1f08e7426a56a323e6928365918093b65aa4fb6,Device Availability,2020-03-30 16:13:17," Call uncheckedSetDevice in ~InlineDeviceGuard only when device index are different. Setting device could be expensive, especially when a debugger is present. We should check the device are different before we set.",,Missing,Performance Degradation,add,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/8269c4f3d30ad950a873d900f7de0880cdd38878,Null Value,2020-03-04 14:10:53,Added nullptr check for pthradpool_get_threads_count. We get seg fault without this in using XNNPACK.,1,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/4dad00b64b396ef81f16bdb896175688fc629f4d,Type Checking,2020-02-26 21:44:40,special case tensor type check when getting RRef ,,Missing,Unexpected Behavior,add,Macro Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/ecd3c252b4da3056797f8a505c9ebe8d68db55c4,Edge Cases,2020-02-14 1:53:11,Suport all length one SLS op lowering: C2 part. We check the input shape of lengths and indices of SLS and add an attribute if they are the same.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/acd51e13f727af22e6c9e579518362898f1b12e6,Tensor Quantization,2020-02-11 20:38:49,TorchScript add check if quantized,,Missing,Unexpected Behavior,add,If Checker,Valid Tensor Quantization,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/7ea6559658a6f650363f8b96f462bbc047e29124,Edge Cases,2020-02-04 18:00:54,Add size checks to torch.stack. Checks the size of each tensor passed to `torch.stack` before calling `cat` to address #29510. This is done in the `get_stack_input` function as that is a common path. The function now compares the size of each tensor in the TensorList to the size of the first tensor and throws an exception when the sizes are not equal.,,Missing,Others,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/4cc6e6bbbe1fb114e7d7fb207ef2deb567950102,Type Checking,2020-02-01 16:15:50,Adding scalar to the c10 registration type check,,Missing,Others,add,If Checker,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/22044c6f7cbdafdd340714bbe220b621e1927826,Error Message,2020-01-07 13:04:24,"Use TORCH_CHECK instead of AT_ASSERT in torch::cuda::gather(). The error message produced by AT_ASSERT() in gather() encouraged users to file a bug report (""please report a bug to PyTorch...""). The assertion should be a regular argument check since it can be triggered by passing tensors with different dimensionality, e.g. `torch.cuda.comm.gather([torch.rand(1, device='cuda'), torch.rand(1, 1, device='cuda')])`.",2,Misleading,Confusing Error Message,improve,Macro Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/3f5dc95b57496c4ea938be381efcdc2ea92bb4cc,Device Availability,2019-11-15 16:55:38,Some of the tests don't specify `device` in the input configs so filter by device won't work for them. This diff fixes that issue.,1,Insufficient,Unexpected Behavior,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/f441bb1c2088e9ce6684765a75869a72817be39d,Device Availability,2019-11-08 12:43:51,"check error status of CUDA launch after Magma kernels. I found that the stack-trace of a failed kernel launch was being recorded elsewhere, even with CUDA_LAUNCH_BLOCKING=1. So, I started debugging, and found that magma launches don't do error checking. I eventually found the issue to be that I didn't compile-in sm37 SASS into the magma binary and the failure was on `x.inverse()`, and that's somehow a problem for magma 2.5.1 (but not 2.5.0).",,Missing,Unexpected Behavior,add,Macro Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/fa66a1498eb1fac5b36811d5c1d6ba1540ffc824,Edge Cases,2019-11-07 18:53:05,Summary: The code checking `if dimensions == 2` is not needed because the case of a 2D tensor (Linear) is already handled by the statement: `receptive_field_size = 1` and this conditional: `if tensor.dim() > 2:`,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/ba59d720cd5c5c81601b53d2c3397c46c1f87883,Edge Cases,2019-10-21 16:03:02,Change error message for torch.linspace(). Basically moves the error checking from the device-specific function to the native function.,,Missing,Unexpected Behavior,add,If Checker,Valid Integer Argument,Integer Variable,,,
pytorch,https://github.com/pytorch/pytorch/commit/2e224d62b6afecc78d885d0a4e160354950f6424,Device Availability,2019-08-27 21:43:11,"We have environment variable USE_CUDNN with self-explanatory name. However cpp code is compiled based on cpp macro definition AT_CUDNN_ENABLED, even if USE_CUDNN is set to 0, cpp is compiled with cuDNN if cmake finds cuDNN in the system.",,Missing,Unexpected Behavior,add,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/24601daa1203a9ad1232e1d18a07ff4842d53d27,Edge Cases,2019-07-24 0:11:06,Adding check for a single batch in adaptive_avg_pool ,1,Insufficient,Program Crash,extend,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/85cbe0d8258ab06897e2f049e61f74d8aa935240,Edge Cases,2019-06-24 13:32:48,This diff is similar to D14163001. We need to handle the edge case when add_axis=1.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/4b45f08f8765549915417997c30ae8981f2ad125,Edge Cases,2019-06-13 16:15:23,The issue was related to not checking the dimensions of source vs destination tensors.,,Missing,Program Crash,add,If Checker,Shape Mismatch Between Tensors,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/8dda19b79f2c4418f481a9f56932b3b5c5afdf39,Device Type,2019-05-29 3:53:53,Remove extraneous TensorId checks in as_strided ,,Unnecessary,Performance Degradation,remove,Macro Checker,Valid Device Type,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/65496e4e67b42e52b3428b0cf2d994e0aa1a9902,Edge Cases,2019-04-25 17:50:19,Bug fix in bound shape inferencer. Accessing dims() without boundary check is not good.,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/e7fc7c732cbde822f9490840704b1f57fe86c50a,Device Availability,2019-04-22 23:55:17,Bugfix for fusion device check,1,Insufficient,Unexpected Behavior,extend,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/65dfe1203ffab064d4e32fa8f76833042369d2f5,Type Checking,2019-04-03 15:47:23,add an assertion to check the param num. Introduce this check to see whether it will break any existing workflow,,Missing,Unexpected Behavior,add,Assertion Statement,Valid Object Type,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/828a6a3b3943a0a0701ecacacd2bcc34fc03fe03,Type Checking,2019-03-31 5:08:11,Use proper isnan check ,,Missing,Unexpected Behavior,add,type Checking API,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/647154f82ac2c57769f080c41452b3e5960ab94f,Edge Cases,2019-03-25 11:44:17,"Assert tensor isn't sparse in enforce_invariants. There's no reason we can't check this, but I'm punting on implementing it for now.  But it currently segfaults, so this is an improvement",,Missing,Program Crash,add,Macro Checker,Tensor is Not Empty,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/260f66c3165ce0c48dd1514a916da6971d981578,Edge Cases,2019-02-21 22:34:30,Fix concat dimension check bug,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/68ad9ae5bebd9efab127fa99e2bafd6852bbd8ed,Type Checking,2018-12-12 12:58:03,"Ensure there aren't variables in checked_tensor_unwrap, checked_tensor_list_unwrap. These functions use unsafeGetTensorImpl(), which doesn't work with Variables (in a silent way that may blow up later). So let's do early checking.",,Missing,Unexpected Behavior,add,type Checking API,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/55092b1cc604fad3d70d31e71bbdd3a43a279423,Edge Cases,2018-12-05 15:00:23,Validate matching input shapes in Int8Add operator. Default engine doesn't support broadcast semantics in Int8Add operator. This patch adds a check that shapes are equivalent.,,Missing,Program Crash,add,Macro Checker,Shape Mismatch Between Tensors,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/dc07102b17915f21170fae9a9d52c6f2d59726ca,Edge Cases,2018-10-16 20:27:44,"Check dim size preventively when doing shape inference for BatchMatMul. We check input(0) but not input(1) in BatchMatMul. This may result in a protobuf exception which won't be caught by upstream and causing termination of the program. Check that with `CAFFE_ENFORCE` will be caught by upstream inference function. Plus, it will print out clean stack tracing showing where went wrong.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/bf32ea80942ce720b105efcd517fd11182edeb08,Edge Cases,2018-07-27 12:24:07," Fix dimension check in 1D instance norm, allowing 2D tensors alongsid e 3D.",,Insufficient,Program Crash,extend,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/9a9eadacc6ac3b734a6d607ae6f63ec1a0d1438d,Device Availability,2018-06-19 11:53:46,explicitly check device for grid_sampler,,Missing,Program Crash,add,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/f14887a63f83b931df9fc5d841c7d3829141ff58,Edge Cases,2018-06-18 23:16:34,check for exact shape match before loading. Use RuntimeError instead of ValueError to keep it consistent with other errors,,Missing,Others,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/8af88f3525e1908deb9ac181ebfb9f8eb49bcb46,Edge Cases,2018-06-06 23:20:33,Add ADD operator for IDEEP. Add boradcast check,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/5e50993be72bec4ad939993328dd02691ef7777d,Type Checking,2018-05-26 11:16:41,Better type checking for pack_padded_sequence symbolic,,Missing,Others,add,type Checking API,Valid Tensor Type,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/23631eee5ae484d8397769492b3ea36f9eca282d,Edge Cases,2018-03-19 19:38:55,"Fix the check of current scope in optimizer. scope.CurrentDeviceScope() can return a None type, which was not considered.",,Insufficient,Unexpected Behavior,extend,If Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/14c47fb211bc929ae4e505e7e13411faa2339f00,Null Value,2018-03-06 3:33:11, fix invalid-null-argument UBSAN error in math_cpu.cc. Add an if statement to check if the destination buffer is not nullptr.,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/4f63f348aef3da8b4d53f61098f4e32bd916c221,Boundary Value,2018-01-29 14:53:03,The bounds check was too conservative by an extra one.,,Insufficient,Program Crash,extend,Ternary Operatory,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/91066559a8c8e5978ed4de722317576b222267c5,Edge Cases,2018-01-20 0:34:09,truthy check for empty string in NameScope(). As in name. LATTE translation team moving some code from Python 2 to 3 uncovered a case where comparison between unicode and str types leads NameScope('') to prepend a separator to the beginning of blob names. This fixes it.,,Improper,Unexpected Behavior,update,If Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/77523df413ff7f8a336b6481cfa47967c234a149,Edge Cases,2018-01-11 15:14:33,Add more check on softmax ONNX exporting logic. * Add more check on softmax exporting logic * Add more comments about axis and dim,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/a7cc6531399300f999a404718827e2a94c115aaf,Device Version,2018-01-03 20:42:55,"Summary:GCC version check is currently being skipped when using the newly released CUDA 9.1. This will also handle other CUDA 9.x minor releases if any, reducing our work if there are such releases like 9.2. This assumes that the next major CUDA version will be 10.0, needing adjustment only after such major version is released.",1,Insufficient,Unexpected Behavior,extend,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/a24c11329a1bdfb00848b4af6dced5368622d637,Backend Type,2017-12-08 18:03:49," Fix out-of-place allocations Summary: Also add int as a datatype and correctly check error codes on group start, end",0,Missing,Unexpected Behavior,add,macro Checker,Available Backend,Backend,,,
pytorch,https://github.com/pytorch/pytorch/commit/ce3413549f5cc312f48c4e2a2f60c41674e26257,Null Value,2017-11-16 16:30:53,check cloned observer in RNN Executor. Summary: Ensure the clone() function didn't return a nullptr before attaching to an RNN operator,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/e8e29690ef0306da25b5f191623476001d29a18b,Null Value,2017-11-10 6:24:49, Add has_debug_def() check to net's debug_def() ,,Missing,Program Crash,add,Macro Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/cf348bcdeecfe0b47a2245d95eaa8ef37fb7b53e,Device Availability,2017-11-02 19:53:36,tighten hasCUDA check,,Missing,Unexpected Behavior,add,If Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/8d377617e73a399e5b8838cf96dfd2896576ac52,Edge Cases,2017-11-02 14:25:49," Fix MKLMemory::CopyTo for case where shapes don't match' Summary: There were cases where the direct copy succeeded, but the dimensions didn't match. Now, we check dimensions and reset if they don't match before issuing the copy.",,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/cf256ee268c30d4ca965b38b45467cf7f738542f,Device Version,2017-11-01 5:51:23,Added tensor op check for cudnn rnns,,Missing,Unexpected Behavior,add,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/0c0c9e743e82b398435ed07719e998aa15ac1ce1,Edge Cases,2017-10-20 13:28:01,Fix dimensions check ,1,Improper,Program Crash,replace,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/8f26d6aabcad991da88b663467ee2080a38631f7,Edge Cases,2017-10-13 10:56:19, More shape checking for ConvNd.* check conv weight & bias dims,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/ba766ef39a4fff2d8856e17747393d469e409775,Edge Cases,2017-10-04 16:03:20,Fix BN size check in eval mode,1,Missing,Unexpected Behavior,add,If Checker,Object is Not Empty,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/181b2481d338a24efc553378c837dcc48b656e3f,Device Availability,2017-09-29 15:18:31,add error checking to grid sampler,,Missing,Unexpected Behavior,add,Macro Checker,Available Device,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/7caceea6e8c352a934f8fecf21f55454007d63b2,Error Message,2017-09-25 23:53:59,better error messages for Conv*d input shape checking ,,Misleading,Confusing Error Message,improve,If Checker,Improve Error Message,Error Message,,,
pytorch,https://github.com/pytorch/pytorch/commit/b8ab3080b1043a610ba2825a2be406a1833b1d70,Others,2017-09-21 17:50:43,"If kernel sizes were specified via ""kernel_w"" and ""kernel_h"", tensor size inference was incorrect in InferShapesAndTypes(): it was checking for ""helper_w"" instead of ""kernel_w"".",0,Improper,Others,update,If Checker,Others,Others,,,
pytorch,https://github.com/pytorch/pytorch/commit/0f0829d88e839be1e150e917aca5b1edb64752ee,Boundary Value,2017-09-14 4:30:58," Strict bound check for SequenceFunctor. Summary: This exhibits the problem in NMT training where some out of bound data seems to have silently written over bound, and causing random segfaults elsewhere in the code. This itself does not solve the problem, but will trigger us to then fix the out of bound issues.",,Missing,Program Crash,add,Macro Checker,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/b31cf0ebd4ffc0e25801b4e40762266ad54721d6,Edge Cases,2017-09-10 13:47:34,Added support for nInputDim parameter in legacy Padding class. * Added support for nInputDim parameter in Padding class. * moved nInputDim to the end so as to not break backwards compatibilty. * hasattr to check if nInputDim is actually set. * check if nInputDim is positive before checking against input dim,,Missing,Program Crash,add,If Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/eed22921237eb4c1f4399af177ce912147a885c3,Null Value,2017-08-31 13:48:57, check for null commonworld in DestroyCommonWorld. Summary: Check for nullptr before closing a common world.,,Missing,Program Crash,add,If Checker,Object is Not Null,Regular Object,,,
pytorch,https://github.com/pytorch/pytorch/commit/4d0fbb0e6f578bea14f3f52b0a927bcc20f8b109,Edge Cases,2017-08-17 16:03:18,"when adding a new axis to concatenate along, allow it to be the last axis. For example, concated 1D columns into a 2D matrix with axis=1, add_axis=1.",0,Improper,Unexpected Behavior,update,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/218f4506fdcde69e3f8f2f2b2b51fefd996c577b,Device Version,2017-08-09 1:35:04,"Summary:this PR modifies the gcc compiler check for CUDA slightly. All ABI are compatible with eachother. According to the documentation, `CUDA_HOST_COMPILER` is set to `CMAKE_C_COMPILER` by default. This PR checks if `CMAKE_C_COMPILER` is too new for CUDA 8 and whether `CUDA_HOST_COMPILER` is set to `CMAKE_C_COMPILER`. It also modifies the message slightly.",2,Insufficient,Unexpected Behavior,extend,If Checker,Valid Device Version,Device,,,
pytorch,https://github.com/pytorch/pytorch/commit/a53f4b0f9bbc007c0a92e4fd28dd22af027e24a8,Edge Cases,2017-07-27 12:54:44, add dimension check to NHWC2NCHW shape inference. Summary: To prevent assertion from protobuffer when accessing the dims.,,Missing,Program Crash,add,Macro Checker,Valid Tensor Dimension,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/babb28d2a3a755424f72518bc360d9f511a24463,Edge Cases,2017-07-25 0:52:30,"Change DHCECK to CAFFE_ENFORCE in softmax_with_loss_op.cc. Summary: Based on discussion on the post in Caffe2 users. Changing DCHECK that works only in debug mode to CAFFE_ENFORCE that throws exception and is a better option. Update: Also correct the check for label_data >= 0, did not check for all elements previously. Moved it to inner loop.",,Improper,Program Crash,update,Macro Checker,In Range Tensor Indexing,Tensor,,,
pytorch,https://github.com/pytorch/pytorch/commit/4b1ebd2f65e49d251ac2cfdb635794c7c6eb362f,Type Checking,2017-07-10 20:52:22,"Fast path for serializing large floating-point tensors to protobuf. Summary: Our existing serialization routines take a significant amount of time for large numpy arrays in order to verify the type of each element in the array as well as converting each element to a canonical type.  For large floating-point tensors, such as model parameters, this checking and converting takes a significant amount of time.  Adding a fast track path for just float32 arrays as this is the most common use case to worry about.",,Missing,Performance Degradation,add,If Checker,Valid Object Type,Regular Object,,,